/**
 * generated by Xtext 2.32.0
 */
package org.xtext.example.mydsl.myDsl.util;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.util.Switch;

import org.xtext.example.mydsl.myDsl.*;

/**
 * <!-- begin-user-doc -->
 * The <b>Switch</b> for the model's inheritance hierarchy.
 * It supports the call {@link #doSwitch(EObject) doSwitch(object)}
 * to invoke the <code>caseXXX</code> method for each class of the model,
 * starting with the actual class of the object
 * and proceeding up the inheritance hierarchy
 * until a non-null result is returned,
 * which is the result of the switch.
 * <!-- end-user-doc -->
 * @see org.xtext.example.mydsl.myDsl.MyDslPackage
 * @generated
 */
public class MyDslSwitch<T> extends Switch<T>
{
  /**
   * The cached model package
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static MyDslPackage modelPackage;

  /**
   * Creates an instance of the switch.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MyDslSwitch()
  {
    if (modelPackage == null)
    {
      modelPackage = MyDslPackage.eINSTANCE;
    }
  }

  /**
   * Checks whether this is a switch for the given package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param ePackage the package in question.
   * @return whether this is a switch for the given package.
   * @generated
   */
  @Override
  protected boolean isSwitchFor(EPackage ePackage)
  {
    return ePackage == modelPackage;
  }

  /**
   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the first non-null result returned by a <code>caseXXX</code> call.
   * @generated
   */
  @Override
  protected T doSwitch(int classifierID, EObject theEObject)
  {
    switch (classifierID)
    {
      case MyDslPackage.MY_DSL:
      {
        MyDsl myDsl = (MyDsl)theEObject;
        T result = caseMyDsl(myDsl);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.COMBINATION_OPERATIONS:
      {
        CombinationOperations combinationOperations = (CombinationOperations)theEObject;
        T result = caseCombinationOperations(combinationOperations);
        if (result == null) result = caseTableOperations(combinationOperations);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.TABLE_OPERATIONS:
      {
        TableOperations tableOperations = (TableOperations)theEObject;
        T result = caseTableOperations(tableOperations);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.SOURCE_OPERATION:
      {
        SourceOperation sourceOperation = (SourceOperation)theEObject;
        T result = caseSourceOperation(sourceOperation);
        if (result == null) result = caseTableOperations(sourceOperation);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.TRANSFORMATION_TABLE_OPERATION:
      {
        TransformationTableOperation transformationTableOperation = (TransformationTableOperation)theEObject;
        T result = caseTransformationTableOperation(transformationTableOperation);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.PIPELINE_TABLE_OPERATION:
      {
        PipelineTableOperation pipelineTableOperation = (PipelineTableOperation)theEObject;
        T result = casePipelineTableOperation(pipelineTableOperation);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.TRANSFORM_OPERATION:
      {
        TransformOperation transformOperation = (TransformOperation)theEObject;
        T result = caseTransformOperation(transformOperation);
        if (result == null) result = caseTableOperations(transformOperation);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.TABLE:
      {
        Table table = (Table)theEObject;
        T result = caseTable(table);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.XML_TYPE:
      {
        XmlType xmlType = (XmlType)theEObject;
        T result = caseXmlType(xmlType);
        if (result == null) result = caseInputType(xmlType);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.JSON_TYPE:
      {
        JsonType jsonType = (JsonType)theEObject;
        T result = caseJsonType(jsonType);
        if (result == null) result = caseInputType(jsonType);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.YAML_TYPE:
      {
        YamlType yamlType = (YamlType)theEObject;
        T result = caseYamlType(yamlType);
        if (result == null) result = caseInputType(yamlType);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.CSV_TYPE:
      {
        CsvType csvType = (CsvType)theEObject;
        T result = caseCsvType(csvType);
        if (result == null) result = caseInputType(csvType);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.AUTO_TYPE:
      {
        AutoType autoType = (AutoType)theEObject;
        T result = caseAutoType(autoType);
        if (result == null) result = caseInputType(autoType);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.INPUT_TYPE:
      {
        InputType inputType = (InputType)theEObject;
        T result = caseInputType(inputType);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.HTML_TYPE:
      {
        HtmlType htmlType = (HtmlType)theEObject;
        T result = caseHtmlType(htmlType);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.OUTPUT_TYPE:
      {
        OutputType outputType = (OutputType)theEObject;
        T result = caseOutputType(outputType);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.META_DATA:
      {
        MetaData metaData = (MetaData)theEObject;
        T result = caseMetaData(metaData);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.SOURCE_STORE:
      {
        SourceStore sourceStore = (SourceStore)theEObject;
        T result = caseSourceStore(sourceStore);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.SOURCE_COUMN_SELECT:
      {
        SourceCoumnSelect sourceCoumnSelect = (SourceCoumnSelect)theEObject;
        T result = caseSourceCoumnSelect(sourceCoumnSelect);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.SOURCE:
      {
        Source source = (Source)theEObject;
        T result = caseSource(source);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.CANONICALIZE_PATH_TRANSFORMATION:
      {
        CanonicalizePathTransformation canonicalizePathTransformation = (CanonicalizePathTransformation)theEObject;
        T result = caseCanonicalizePathTransformation(canonicalizePathTransformation);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.GET_PATH_TRANSFORMATION:
      {
        GetPathTransformation getPathTransformation = (GetPathTransformation)theEObject;
        T result = caseGetPathTransformation(getPathTransformation);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.APPEND_PATH_TRANSFORMATION:
      {
        AppendPathTransformation appendPathTransformation = (AppendPathTransformation)theEObject;
        T result = caseAppendPathTransformation(appendPathTransformation);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.PATH_TRANSFORMATION:
      {
        PathTransformation pathTransformation = (PathTransformation)theEObject;
        T result = casePathTransformation(pathTransformation);
        if (result == null) result = caseTransformation(pathTransformation);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.FOLD_MAX_TRANFORMATION:
      {
        FoldMaxTranformation foldMaxTranformation = (FoldMaxTranformation)theEObject;
        T result = caseFoldMaxTranformation(foldMaxTranformation);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.FOLD_AVERAGE_TRANFORMATION:
      {
        FoldAverageTranformation foldAverageTranformation = (FoldAverageTranformation)theEObject;
        T result = caseFoldAverageTranformation(foldAverageTranformation);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.FOLD_SUM_TRANFORMATION:
      {
        FoldSumTranformation foldSumTranformation = (FoldSumTranformation)theEObject;
        T result = caseFoldSumTranformation(foldSumTranformation);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.GROUP_BY:
      {
        GroupBy groupBy = (GroupBy)theEObject;
        T result = caseGroupBy(groupBy);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.FOLD_TRANSFORMATION:
      {
        FoldTransformation foldTransformation = (FoldTransformation)theEObject;
        T result = caseFoldTransformation(foldTransformation);
        if (result == null) result = caseTransformation(foldTransformation);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.ADD_COLUMN_TRANSFORMATION:
      {
        AddColumnTransformation addColumnTransformation = (AddColumnTransformation)theEObject;
        T result = caseAddColumnTransformation(addColumnTransformation);
        if (result == null) result = caseColumnTransformation(addColumnTransformation);
        if (result == null) result = caseTransformation(addColumnTransformation);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.REMOVE_COLUMN_TRANSFORMATION:
      {
        RemoveColumnTransformation removeColumnTransformation = (RemoveColumnTransformation)theEObject;
        T result = caseRemoveColumnTransformation(removeColumnTransformation);
        if (result == null) result = caseColumnTransformation(removeColumnTransformation);
        if (result == null) result = caseTransformation(removeColumnTransformation);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.RENAME_COLUMN_TRANSFORMATION:
      {
        RenameColumnTransformation renameColumnTransformation = (RenameColumnTransformation)theEObject;
        T result = caseRenameColumnTransformation(renameColumnTransformation);
        if (result == null) result = caseColumnTransformation(renameColumnTransformation);
        if (result == null) result = caseTransformation(renameColumnTransformation);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.SELECT_COLUMN_TRANSFORMATION:
      {
        SelectColumnTransformation selectColumnTransformation = (SelectColumnTransformation)theEObject;
        T result = caseSelectColumnTransformation(selectColumnTransformation);
        if (result == null) result = caseColumnTransformation(selectColumnTransformation);
        if (result == null) result = caseTransformation(selectColumnTransformation);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.COLUMN_TRANSFORMATION:
      {
        ColumnTransformation columnTransformation = (ColumnTransformation)theEObject;
        T result = caseColumnTransformation(columnTransformation);
        if (result == null) result = caseTransformation(columnTransformation);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.TRANSFORMATION:
      {
        Transformation transformation = (Transformation)theEObject;
        T result = caseTransformation(transformation);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.PIPELINE:
      {
        Pipeline pipeline = (Pipeline)theEObject;
        T result = casePipeline(pipeline);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case MyDslPackage.EXPORT:
      {
        Export export = (Export)theEObject;
        T result = caseExport(export);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      default: return defaultCase(theEObject);
    }
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>My Dsl</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>My Dsl</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMyDsl(MyDsl object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Combination Operations</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Combination Operations</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCombinationOperations(CombinationOperations object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Table Operations</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Table Operations</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseTableOperations(TableOperations object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Source Operation</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Source Operation</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSourceOperation(SourceOperation object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Transformation Table Operation</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Transformation Table Operation</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseTransformationTableOperation(TransformationTableOperation object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Pipeline Table Operation</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Pipeline Table Operation</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePipelineTableOperation(PipelineTableOperation object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Transform Operation</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Transform Operation</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseTransformOperation(TransformOperation object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Table</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Table</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseTable(Table object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Xml Type</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Xml Type</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseXmlType(XmlType object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Json Type</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Json Type</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseJsonType(JsonType object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Yaml Type</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Yaml Type</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseYamlType(YamlType object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Csv Type</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Csv Type</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCsvType(CsvType object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Auto Type</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Auto Type</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAutoType(AutoType object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Input Type</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Input Type</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseInputType(InputType object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Html Type</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Html Type</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseHtmlType(HtmlType object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Output Type</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Output Type</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseOutputType(OutputType object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Meta Data</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Meta Data</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMetaData(MetaData object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Source Store</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Source Store</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSourceStore(SourceStore object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Source Coumn Select</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Source Coumn Select</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSourceCoumnSelect(SourceCoumnSelect object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Source</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Source</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSource(Source object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Canonicalize Path Transformation</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Canonicalize Path Transformation</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCanonicalizePathTransformation(CanonicalizePathTransformation object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Get Path Transformation</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Get Path Transformation</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGetPathTransformation(GetPathTransformation object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Append Path Transformation</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Append Path Transformation</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAppendPathTransformation(AppendPathTransformation object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Path Transformation</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Path Transformation</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePathTransformation(PathTransformation object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Fold Max Tranformation</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Fold Max Tranformation</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFoldMaxTranformation(FoldMaxTranformation object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Fold Average Tranformation</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Fold Average Tranformation</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFoldAverageTranformation(FoldAverageTranformation object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Fold Sum Tranformation</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Fold Sum Tranformation</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFoldSumTranformation(FoldSumTranformation object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Group By</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Group By</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGroupBy(GroupBy object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Fold Transformation</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Fold Transformation</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFoldTransformation(FoldTransformation object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Add Column Transformation</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Add Column Transformation</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAddColumnTransformation(AddColumnTransformation object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Remove Column Transformation</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Remove Column Transformation</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseRemoveColumnTransformation(RemoveColumnTransformation object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Rename Column Transformation</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Rename Column Transformation</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseRenameColumnTransformation(RenameColumnTransformation object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Select Column Transformation</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Select Column Transformation</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSelectColumnTransformation(SelectColumnTransformation object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Column Transformation</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Column Transformation</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseColumnTransformation(ColumnTransformation object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Transformation</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Transformation</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseTransformation(Transformation object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Pipeline</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Pipeline</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePipeline(Pipeline object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Export</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Export</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseExport(Export object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch, but this is the last case anyway.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EObject</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject)
   * @generated
   */
  @Override
  public T defaultCase(EObject object)
  {
    return null;
  }

} //MyDslSwitch
