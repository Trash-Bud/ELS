/*
 * generated by Xtext 2.32.0
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.example.mydsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

}
@parser::members {
	private MyDslGrammarAccess grammarAccess;

	public void setGrammarAccess(MyDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleMyDsl
entryRuleMyDsl
:
{ before(grammarAccess.getMyDslRule()); }
	 ruleMyDsl
{ after(grammarAccess.getMyDslRule()); } 
	 EOF 
;

// Rule MyDsl
ruleMyDsl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMyDslAccess().getGroup()); }
		(rule__MyDsl__Group__0)
		{ after(grammarAccess.getMyDslAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCombinationOperations
entryRuleCombinationOperations
:
{ before(grammarAccess.getCombinationOperationsRule()); }
	 ruleCombinationOperations
{ after(grammarAccess.getCombinationOperationsRule()); } 
	 EOF 
;

// Rule CombinationOperations
ruleCombinationOperations 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCombinationOperationsAccess().getGroup()); }
		(rule__CombinationOperations__Group__0)
		{ after(grammarAccess.getCombinationOperationsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTableOperations
entryRuleTableOperations
:
{ before(grammarAccess.getTableOperationsRule()); }
	 ruleTableOperations
{ after(grammarAccess.getTableOperationsRule()); } 
	 EOF 
;

// Rule TableOperations
ruleTableOperations 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTableOperationsAccess().getAlternatives()); }
		(rule__TableOperations__Alternatives)
		{ after(grammarAccess.getTableOperationsAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSourceOperation
entryRuleSourceOperation
:
{ before(grammarAccess.getSourceOperationRule()); }
	 ruleSourceOperation
{ after(grammarAccess.getSourceOperationRule()); } 
	 EOF 
;

// Rule SourceOperation
ruleSourceOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSourceOperationAccess().getSourceAssignment()); }
		(rule__SourceOperation__SourceAssignment)
		{ after(grammarAccess.getSourceOperationAccess().getSourceAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTransformationTableOperation
entryRuleTransformationTableOperation
:
{ before(grammarAccess.getTransformationTableOperationRule()); }
	 ruleTransformationTableOperation
{ after(grammarAccess.getTransformationTableOperationRule()); } 
	 EOF 
;

// Rule TransformationTableOperation
ruleTransformationTableOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTransformationTableOperationAccess().getGroup()); }
		(rule__TransformationTableOperation__Group__0)
		{ after(grammarAccess.getTransformationTableOperationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePipelineTableOperation
entryRulePipelineTableOperation
:
{ before(grammarAccess.getPipelineTableOperationRule()); }
	 rulePipelineTableOperation
{ after(grammarAccess.getPipelineTableOperationRule()); } 
	 EOF 
;

// Rule PipelineTableOperation
rulePipelineTableOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPipelineTableOperationAccess().getPipelineAssignment()); }
		(rule__PipelineTableOperation__PipelineAssignment)
		{ after(grammarAccess.getPipelineTableOperationAccess().getPipelineAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTransformOperation
entryRuleTransformOperation
:
{ before(grammarAccess.getTransformOperationRule()); }
	 ruleTransformOperation
{ after(grammarAccess.getTransformOperationRule()); } 
	 EOF 
;

// Rule TransformOperation
ruleTransformOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTransformOperationAccess().getGroup()); }
		(rule__TransformOperation__Group__0)
		{ after(grammarAccess.getTransformOperationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTable
entryRuleTable
:
{ before(grammarAccess.getTableRule()); }
	 ruleTable
{ after(grammarAccess.getTableRule()); } 
	 EOF 
;

// Rule Table
ruleTable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTableAccess().getGroup()); }
		(rule__Table__Group__0)
		{ after(grammarAccess.getTableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleXmlType
entryRuleXmlType
:
{ before(grammarAccess.getXmlTypeRule()); }
	 ruleXmlType
{ after(grammarAccess.getXmlTypeRule()); } 
	 EOF 
;

// Rule XmlType
ruleXmlType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getXmlTypeAccess().getGroup()); }
		(rule__XmlType__Group__0)
		{ after(grammarAccess.getXmlTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleJsonType
entryRuleJsonType
:
{ before(grammarAccess.getJsonTypeRule()); }
	 ruleJsonType
{ after(grammarAccess.getJsonTypeRule()); } 
	 EOF 
;

// Rule JsonType
ruleJsonType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getJsonTypeAccess().getGroup()); }
		(rule__JsonType__Group__0)
		{ after(grammarAccess.getJsonTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleYamlType
entryRuleYamlType
:
{ before(grammarAccess.getYamlTypeRule()); }
	 ruleYamlType
{ after(grammarAccess.getYamlTypeRule()); } 
	 EOF 
;

// Rule YamlType
ruleYamlType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getYamlTypeAccess().getGroup()); }
		(rule__YamlType__Group__0)
		{ after(grammarAccess.getYamlTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCsvType
entryRuleCsvType
:
{ before(grammarAccess.getCsvTypeRule()); }
	 ruleCsvType
{ after(grammarAccess.getCsvTypeRule()); } 
	 EOF 
;

// Rule CsvType
ruleCsvType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCsvTypeAccess().getGroup()); }
		(rule__CsvType__Group__0)
		{ after(grammarAccess.getCsvTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAutoType
entryRuleAutoType
:
{ before(grammarAccess.getAutoTypeRule()); }
	 ruleAutoType
{ after(grammarAccess.getAutoTypeRule()); } 
	 EOF 
;

// Rule AutoType
ruleAutoType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAutoTypeAccess().getGroup()); }
		(rule__AutoType__Group__0)
		{ after(grammarAccess.getAutoTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInputType
entryRuleInputType
:
{ before(grammarAccess.getInputTypeRule()); }
	 ruleInputType
{ after(grammarAccess.getInputTypeRule()); } 
	 EOF 
;

// Rule InputType
ruleInputType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInputTypeAccess().getAlternatives()); }
		(rule__InputType__Alternatives)
		{ after(grammarAccess.getInputTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleHtmlType
entryRuleHtmlType
:
{ before(grammarAccess.getHtmlTypeRule()); }
	 ruleHtmlType
{ after(grammarAccess.getHtmlTypeRule()); } 
	 EOF 
;

// Rule HtmlType
ruleHtmlType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHtmlTypeAccess().getGroup()); }
		(rule__HtmlType__Group__0)
		{ after(grammarAccess.getHtmlTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOutputType
entryRuleOutputType
:
{ before(grammarAccess.getOutputTypeRule()); }
	 ruleOutputType
{ after(grammarAccess.getOutputTypeRule()); } 
	 EOF 
;

// Rule OutputType
ruleOutputType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOutputTypeAccess().getTypeAssignment()); }
		(rule__OutputType__TypeAssignment)
		{ after(grammarAccess.getOutputTypeAccess().getTypeAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMetaData
entryRuleMetaData
:
{ before(grammarAccess.getMetaDataRule()); }
	 ruleMetaData
{ after(grammarAccess.getMetaDataRule()); } 
	 EOF 
;

// Rule MetaData
ruleMetaData 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMetaDataAccess().getMetadataAssignment()); }
		(rule__MetaData__MetadataAssignment)
		{ after(grammarAccess.getMetaDataAccess().getMetadataAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSourceStore
entryRuleSourceStore
:
{ before(grammarAccess.getSourceStoreRule()); }
	 ruleSourceStore
{ after(grammarAccess.getSourceStoreRule()); } 
	 EOF 
;

// Rule SourceStore
ruleSourceStore 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSourceStoreAccess().getGroup()); }
		(rule__SourceStore__Group__0)
		{ after(grammarAccess.getSourceStoreAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSourceCoumnSelect
entryRuleSourceCoumnSelect
:
{ before(grammarAccess.getSourceCoumnSelectRule()); }
	 ruleSourceCoumnSelect
{ after(grammarAccess.getSourceCoumnSelectRule()); } 
	 EOF 
;

// Rule SourceCoumnSelect
ruleSourceCoumnSelect 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSourceCoumnSelectAccess().getGroup()); }
		(rule__SourceCoumnSelect__Group__0)
		{ after(grammarAccess.getSourceCoumnSelectAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSource
entryRuleSource
:
{ before(grammarAccess.getSourceRule()); }
	 ruleSource
{ after(grammarAccess.getSourceRule()); } 
	 EOF 
;

// Rule Source
ruleSource 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSourceAccess().getGroup()); }
		(rule__Source__Group__0)
		{ after(grammarAccess.getSourceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCanonicalizePathTransformation
entryRuleCanonicalizePathTransformation
:
{ before(grammarAccess.getCanonicalizePathTransformationRule()); }
	 ruleCanonicalizePathTransformation
{ after(grammarAccess.getCanonicalizePathTransformationRule()); } 
	 EOF 
;

// Rule CanonicalizePathTransformation
ruleCanonicalizePathTransformation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCanonicalizePathTransformationAccess().getGroup()); }
		(rule__CanonicalizePathTransformation__Group__0)
		{ after(grammarAccess.getCanonicalizePathTransformationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGetPathTransformation
entryRuleGetPathTransformation
:
{ before(grammarAccess.getGetPathTransformationRule()); }
	 ruleGetPathTransformation
{ after(grammarAccess.getGetPathTransformationRule()); } 
	 EOF 
;

// Rule GetPathTransformation
ruleGetPathTransformation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGetPathTransformationAccess().getGroup()); }
		(rule__GetPathTransformation__Group__0)
		{ after(grammarAccess.getGetPathTransformationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAppendPathTransformation
entryRuleAppendPathTransformation
:
{ before(grammarAccess.getAppendPathTransformationRule()); }
	 ruleAppendPathTransformation
{ after(grammarAccess.getAppendPathTransformationRule()); } 
	 EOF 
;

// Rule AppendPathTransformation
ruleAppendPathTransformation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAppendPathTransformationAccess().getGroup()); }
		(rule__AppendPathTransformation__Group__0)
		{ after(grammarAccess.getAppendPathTransformationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePathTransformation
entryRulePathTransformation
:
{ before(grammarAccess.getPathTransformationRule()); }
	 rulePathTransformation
{ after(grammarAccess.getPathTransformationRule()); } 
	 EOF 
;

// Rule PathTransformation
rulePathTransformation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPathTransformationAccess().getGroup()); }
		(rule__PathTransformation__Group__0)
		{ after(grammarAccess.getPathTransformationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFoldMaxTranformation
entryRuleFoldMaxTranformation
:
{ before(grammarAccess.getFoldMaxTranformationRule()); }
	 ruleFoldMaxTranformation
{ after(grammarAccess.getFoldMaxTranformationRule()); } 
	 EOF 
;

// Rule FoldMaxTranformation
ruleFoldMaxTranformation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFoldMaxTranformationAccess().getGroup()); }
		(rule__FoldMaxTranformation__Group__0)
		{ after(grammarAccess.getFoldMaxTranformationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFoldAverageTranformation
entryRuleFoldAverageTranformation
:
{ before(grammarAccess.getFoldAverageTranformationRule()); }
	 ruleFoldAverageTranformation
{ after(grammarAccess.getFoldAverageTranformationRule()); } 
	 EOF 
;

// Rule FoldAverageTranformation
ruleFoldAverageTranformation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFoldAverageTranformationAccess().getGroup()); }
		(rule__FoldAverageTranformation__Group__0)
		{ after(grammarAccess.getFoldAverageTranformationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFoldSumTranformation
entryRuleFoldSumTranformation
:
{ before(grammarAccess.getFoldSumTranformationRule()); }
	 ruleFoldSumTranformation
{ after(grammarAccess.getFoldSumTranformationRule()); } 
	 EOF 
;

// Rule FoldSumTranformation
ruleFoldSumTranformation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFoldSumTranformationAccess().getGroup()); }
		(rule__FoldSumTranformation__Group__0)
		{ after(grammarAccess.getFoldSumTranformationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGroupBy
entryRuleGroupBy
:
{ before(grammarAccess.getGroupByRule()); }
	 ruleGroupBy
{ after(grammarAccess.getGroupByRule()); } 
	 EOF 
;

// Rule GroupBy
ruleGroupBy 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGroupByAccess().getGroup()); }
		(rule__GroupBy__Group__0)
		{ after(grammarAccess.getGroupByAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFoldTransformation
entryRuleFoldTransformation
:
{ before(grammarAccess.getFoldTransformationRule()); }
	 ruleFoldTransformation
{ after(grammarAccess.getFoldTransformationRule()); } 
	 EOF 
;

// Rule FoldTransformation
ruleFoldTransformation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFoldTransformationAccess().getGroup()); }
		(rule__FoldTransformation__Group__0)
		{ after(grammarAccess.getFoldTransformationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAddColumnTransformation
entryRuleAddColumnTransformation
:
{ before(grammarAccess.getAddColumnTransformationRule()); }
	 ruleAddColumnTransformation
{ after(grammarAccess.getAddColumnTransformationRule()); } 
	 EOF 
;

// Rule AddColumnTransformation
ruleAddColumnTransformation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAddColumnTransformationAccess().getGroup()); }
		(rule__AddColumnTransformation__Group__0)
		{ after(grammarAccess.getAddColumnTransformationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRemoveColumnTransformation
entryRuleRemoveColumnTransformation
:
{ before(grammarAccess.getRemoveColumnTransformationRule()); }
	 ruleRemoveColumnTransformation
{ after(grammarAccess.getRemoveColumnTransformationRule()); } 
	 EOF 
;

// Rule RemoveColumnTransformation
ruleRemoveColumnTransformation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRemoveColumnTransformationAccess().getGroup()); }
		(rule__RemoveColumnTransformation__Group__0)
		{ after(grammarAccess.getRemoveColumnTransformationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRenameColumnTransformation
entryRuleRenameColumnTransformation
:
{ before(grammarAccess.getRenameColumnTransformationRule()); }
	 ruleRenameColumnTransformation
{ after(grammarAccess.getRenameColumnTransformationRule()); } 
	 EOF 
;

// Rule RenameColumnTransformation
ruleRenameColumnTransformation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRenameColumnTransformationAccess().getGroup()); }
		(rule__RenameColumnTransformation__Group__0)
		{ after(grammarAccess.getRenameColumnTransformationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSelectColumnTransformation
entryRuleSelectColumnTransformation
:
{ before(grammarAccess.getSelectColumnTransformationRule()); }
	 ruleSelectColumnTransformation
{ after(grammarAccess.getSelectColumnTransformationRule()); } 
	 EOF 
;

// Rule SelectColumnTransformation
ruleSelectColumnTransformation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSelectColumnTransformationAccess().getGroup()); }
		(rule__SelectColumnTransformation__Group__0)
		{ after(grammarAccess.getSelectColumnTransformationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleColumnTransformation
entryRuleColumnTransformation
:
{ before(grammarAccess.getColumnTransformationRule()); }
	 ruleColumnTransformation
{ after(grammarAccess.getColumnTransformationRule()); } 
	 EOF 
;

// Rule ColumnTransformation
ruleColumnTransformation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getColumnTransformationAccess().getAlternatives()); }
		(rule__ColumnTransformation__Alternatives)
		{ after(grammarAccess.getColumnTransformationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTransformation
entryRuleTransformation
:
{ before(grammarAccess.getTransformationRule()); }
	 ruleTransformation
{ after(grammarAccess.getTransformationRule()); } 
	 EOF 
;

// Rule Transformation
ruleTransformation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTransformationAccess().getAlternatives()); }
		(rule__Transformation__Alternatives)
		{ after(grammarAccess.getTransformationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePipeline
entryRulePipeline
:
{ before(grammarAccess.getPipelineRule()); }
	 rulePipeline
{ after(grammarAccess.getPipelineRule()); } 
	 EOF 
;

// Rule Pipeline
rulePipeline 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPipelineAccess().getGroup()); }
		(rule__Pipeline__Group__0)
		{ after(grammarAccess.getPipelineAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExport
entryRuleExport
:
{ before(grammarAccess.getExportRule()); }
	 ruleExport
{ after(grammarAccess.getExportRule()); } 
	 EOF 
;

// Rule Export
ruleExport 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExportAccess().getGroup()); }
		(rule__Export__Group__0)
		{ after(grammarAccess.getExportAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinationOperations__OperationAlternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCombinationOperationsAccess().getOperationMergeKeyword_0_0_0()); }
		'merge'
		{ after(grammarAccess.getCombinationOperationsAccess().getOperationMergeKeyword_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getCombinationOperationsAccess().getOperationAppendKeyword_0_0_1()); }
		'append'
		{ after(grammarAccess.getCombinationOperationsAccess().getOperationAppendKeyword_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinationOperations__TypeAlternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCombinationOperationsAccess().getTypeUnionKeyword_1_0_0()); }
		'union'
		{ after(grammarAccess.getCombinationOperationsAccess().getTypeUnionKeyword_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getCombinationOperationsAccess().getTypeIntersectionKeyword_1_0_1()); }
		'intersection'
		{ after(grammarAccess.getCombinationOperationsAccess().getTypeIntersectionKeyword_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TableOperations__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableOperationsAccess().getCombinationOperationsParserRuleCall_0()); }
		ruleCombinationOperations
		{ after(grammarAccess.getTableOperationsAccess().getCombinationOperationsParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTableOperationsAccess().getTransformOperationParserRuleCall_1()); }
		ruleTransformOperation
		{ after(grammarAccess.getTableOperationsAccess().getTransformOperationParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getTableOperationsAccess().getSourceOperationParserRuleCall_2()); }
		ruleSourceOperation
		{ after(grammarAccess.getTableOperationsAccess().getSourceOperationParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformOperation__OperationAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransformOperationAccess().getOperationTransformationTableOperationParserRuleCall_1_1_0_0()); }
		ruleTransformationTableOperation
		{ after(grammarAccess.getTransformOperationAccess().getOperationTransformationTableOperationParserRuleCall_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getTransformOperationAccess().getOperationPipelineTableOperationParserRuleCall_1_1_0_1()); }
		rulePipelineTableOperation
		{ after(grammarAccess.getTransformOperationAccess().getOperationPipelineTableOperationParserRuleCall_1_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InputType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInputTypeAccess().getJsonTypeParserRuleCall_0()); }
		ruleJsonType
		{ after(grammarAccess.getInputTypeAccess().getJsonTypeParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getInputTypeAccess().getXmlTypeParserRuleCall_1()); }
		ruleXmlType
		{ after(grammarAccess.getInputTypeAccess().getXmlTypeParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getInputTypeAccess().getCsvTypeParserRuleCall_2()); }
		ruleCsvType
		{ after(grammarAccess.getInputTypeAccess().getCsvTypeParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getInputTypeAccess().getYamlTypeParserRuleCall_3()); }
		ruleYamlType
		{ after(grammarAccess.getInputTypeAccess().getYamlTypeParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getInputTypeAccess().getAutoTypeParserRuleCall_4()); }
		ruleAutoType
		{ after(grammarAccess.getInputTypeAccess().getAutoTypeParserRuleCall_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputType__TypeAlternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutputTypeAccess().getTypeHtmlTypeParserRuleCall_0_0()); }
		ruleHtmlType
		{ after(grammarAccess.getOutputTypeAccess().getTypeHtmlTypeParserRuleCall_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getOutputTypeAccess().getTypeAutoTypeParserRuleCall_0_1()); }
		ruleAutoType
		{ after(grammarAccess.getOutputTypeAccess().getTypeAutoTypeParserRuleCall_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getOutputTypeAccess().getTypeCsvTypeParserRuleCall_0_2()); }
		ruleCsvType
		{ after(grammarAccess.getOutputTypeAccess().getTypeCsvTypeParserRuleCall_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaData__MetadataAlternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMetaDataAccess().getMetadataFilepathKeyword_0_0()); }
		'filepath'
		{ after(grammarAccess.getMetaDataAccess().getMetadataFilepathKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getMetaDataAccess().getMetadataLastmodifiedKeyword_0_1()); }
		'lastmodified'
		{ after(grammarAccess.getMetaDataAccess().getMetadataLastmodifiedKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PathTransformation__OperationAlternatives_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPathTransformationAccess().getOperationAppendPathTransformationParserRuleCall_2_0_0()); }
		ruleAppendPathTransformation
		{ after(grammarAccess.getPathTransformationAccess().getOperationAppendPathTransformationParserRuleCall_2_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getPathTransformationAccess().getOperationCanonicalizePathTransformationParserRuleCall_2_0_1()); }
		ruleCanonicalizePathTransformation
		{ after(grammarAccess.getPathTransformationAccess().getOperationCanonicalizePathTransformationParserRuleCall_2_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getPathTransformationAccess().getOperationGetPathTransformationParserRuleCall_2_0_2()); }
		ruleGetPathTransformation
		{ after(grammarAccess.getPathTransformationAccess().getOperationGetPathTransformationParserRuleCall_2_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FoldTransformation__OperationAlternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFoldTransformationAccess().getOperationFoldMaxTranformationParserRuleCall_0_0_0()); }
		ruleFoldMaxTranformation
		{ after(grammarAccess.getFoldTransformationAccess().getOperationFoldMaxTranformationParserRuleCall_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getFoldTransformationAccess().getOperationFoldSumTranformationParserRuleCall_0_0_1()); }
		ruleFoldSumTranformation
		{ after(grammarAccess.getFoldTransformationAccess().getOperationFoldSumTranformationParserRuleCall_0_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getFoldTransformationAccess().getOperationFoldAverageTranformationParserRuleCall_0_0_2()); }
		ruleFoldAverageTranformation
		{ after(grammarAccess.getFoldTransformationAccess().getOperationFoldAverageTranformationParserRuleCall_0_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnTransformation__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColumnTransformationAccess().getAddColumnTransformationParserRuleCall_0()); }
		ruleAddColumnTransformation
		{ after(grammarAccess.getColumnTransformationAccess().getAddColumnTransformationParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getColumnTransformationAccess().getRemoveColumnTransformationParserRuleCall_1()); }
		ruleRemoveColumnTransformation
		{ after(grammarAccess.getColumnTransformationAccess().getRemoveColumnTransformationParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getColumnTransformationAccess().getRenameColumnTransformationParserRuleCall_2()); }
		ruleRenameColumnTransformation
		{ after(grammarAccess.getColumnTransformationAccess().getRenameColumnTransformationParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getColumnTransformationAccess().getSelectColumnTransformationParserRuleCall_3()); }
		ruleSelectColumnTransformation
		{ after(grammarAccess.getColumnTransformationAccess().getSelectColumnTransformationParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transformation__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransformationAccess().getPathTransformationParserRuleCall_0()); }
		rulePathTransformation
		{ after(grammarAccess.getTransformationAccess().getPathTransformationParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTransformationAccess().getFoldTransformationParserRuleCall_1()); }
		ruleFoldTransformation
		{ after(grammarAccess.getTransformationAccess().getFoldTransformationParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getTransformationAccess().getColumnTransformationParserRuleCall_2()); }
		ruleColumnTransformation
		{ after(grammarAccess.getTransformationAccess().getColumnTransformationParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MyDsl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MyDsl__Group__0__Impl
	rule__MyDsl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MyDsl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMyDslAccess().getPipelinesAssignment_0()); }
	(rule__MyDsl__PipelinesAssignment_0)*
	{ after(grammarAccess.getMyDslAccess().getPipelinesAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MyDsl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MyDsl__Group__1__Impl
	rule__MyDsl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MyDsl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMyDslAccess().getSourcesAssignment_1()); }
	(rule__MyDsl__SourcesAssignment_1)*
	{ after(grammarAccess.getMyDslAccess().getSourcesAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MyDsl__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MyDsl__Group__2__Impl
	rule__MyDsl__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MyDsl__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMyDslAccess().getTablesAssignment_2()); }
	(rule__MyDsl__TablesAssignment_2)*
	{ after(grammarAccess.getMyDslAccess().getTablesAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MyDsl__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MyDsl__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MyDsl__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMyDslAccess().getExportAssignment_3()); }
	(rule__MyDsl__ExportAssignment_3)*
	{ after(grammarAccess.getMyDslAccess().getExportAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CombinationOperations__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CombinationOperations__Group__0__Impl
	rule__CombinationOperations__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinationOperations__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCombinationOperationsAccess().getOperationAssignment_0()); }
	(rule__CombinationOperations__OperationAssignment_0)
	{ after(grammarAccess.getCombinationOperationsAccess().getOperationAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinationOperations__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CombinationOperations__Group__1__Impl
	rule__CombinationOperations__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinationOperations__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCombinationOperationsAccess().getTypeAssignment_1()); }
	(rule__CombinationOperations__TypeAssignment_1)?
	{ after(grammarAccess.getCombinationOperationsAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinationOperations__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CombinationOperations__Group__2__Impl
	rule__CombinationOperations__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinationOperations__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCombinationOperationsAccess().getLeftSquareBracketKeyword_2()); }
	'['
	{ after(grammarAccess.getCombinationOperationsAccess().getLeftSquareBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinationOperations__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CombinationOperations__Group__3__Impl
	rule__CombinationOperations__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinationOperations__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCombinationOperationsAccess().getTableOperationAssignment_3()); }
	(rule__CombinationOperations__TableOperationAssignment_3)
	{ after(grammarAccess.getCombinationOperationsAccess().getTableOperationAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinationOperations__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CombinationOperations__Group__4__Impl
	rule__CombinationOperations__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinationOperations__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCombinationOperationsAccess().getGroup_4()); }
	(rule__CombinationOperations__Group_4__0)*
	{ after(grammarAccess.getCombinationOperationsAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinationOperations__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CombinationOperations__Group__5__Impl
	rule__CombinationOperations__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinationOperations__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCombinationOperationsAccess().getCommaKeyword_5()); }
	(',')?
	{ after(grammarAccess.getCombinationOperationsAccess().getCommaKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinationOperations__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CombinationOperations__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinationOperations__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCombinationOperationsAccess().getRightSquareBracketKeyword_6()); }
	']'
	{ after(grammarAccess.getCombinationOperationsAccess().getRightSquareBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CombinationOperations__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CombinationOperations__Group_4__0__Impl
	rule__CombinationOperations__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinationOperations__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCombinationOperationsAccess().getCommaKeyword_4_0()); }
	','
	{ after(grammarAccess.getCombinationOperationsAccess().getCommaKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinationOperations__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CombinationOperations__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinationOperations__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCombinationOperationsAccess().getTableOperationAssignment_4_1()); }
	(rule__CombinationOperations__TableOperationAssignment_4_1)
	{ after(grammarAccess.getCombinationOperationsAccess().getTableOperationAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TransformationTableOperation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransformationTableOperation__Group__0__Impl
	rule__TransformationTableOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationTableOperation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransformationTableOperationAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getTransformationTableOperationAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationTableOperation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransformationTableOperation__Group__1__Impl
	rule__TransformationTableOperation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationTableOperation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransformationTableOperationAccess().getTransformationAssignment_1()); }
	(rule__TransformationTableOperation__TransformationAssignment_1)
	{ after(grammarAccess.getTransformationTableOperationAccess().getTransformationAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationTableOperation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransformationTableOperation__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationTableOperation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransformationTableOperationAccess().getRightParenthesisKeyword_2()); }
	')'
	{ after(grammarAccess.getTransformationTableOperationAccess().getRightParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TransformOperation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransformOperation__Group__0__Impl
	rule__TransformOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformOperation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransformOperationAccess().getSourceAssignment_0()); }
	(rule__TransformOperation__SourceAssignment_0)
	{ after(grammarAccess.getTransformOperationAccess().getSourceAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformOperation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransformOperation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformOperation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getTransformOperationAccess().getGroup_1()); }
		(rule__TransformOperation__Group_1__0)
		{ after(grammarAccess.getTransformOperationAccess().getGroup_1()); }
	)
	(
		{ before(grammarAccess.getTransformOperationAccess().getGroup_1()); }
		(rule__TransformOperation__Group_1__0)*
		{ after(grammarAccess.getTransformOperationAccess().getGroup_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TransformOperation__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransformOperation__Group_1__0__Impl
	rule__TransformOperation__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformOperation__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransformOperationAccess().getTransformKeyword_1_0()); }
	'transform'
	{ after(grammarAccess.getTransformOperationAccess().getTransformKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformOperation__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransformOperation__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformOperation__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransformOperationAccess().getOperationAssignment_1_1()); }
	(rule__TransformOperation__OperationAssignment_1_1)
	{ after(grammarAccess.getTransformOperationAccess().getOperationAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Table__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__0__Impl
	rule__Table__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getNameAssignment_0()); }
	(rule__Table__NameAssignment_0)
	{ after(grammarAccess.getTableAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__1__Impl
	rule__Table__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getTableAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__2__Impl
	rule__Table__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getOperationAssignment_2()); }
	(rule__Table__OperationAssignment_2)
	{ after(grammarAccess.getTableAccess().getOperationAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getSemicolonKeyword_3()); }
	';'
	{ after(grammarAccess.getTableAccess().getSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__XmlType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XmlType__Group__0__Impl
	rule__XmlType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XmlType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXmlTypeAccess().getXmlTypeAction_0()); }
	()
	{ after(grammarAccess.getXmlTypeAccess().getXmlTypeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XmlType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XmlType__Group__1__Impl
	rule__XmlType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XmlType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXmlTypeAccess().getXmlKeyword_1()); }
	'xml'
	{ after(grammarAccess.getXmlTypeAccess().getXmlKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XmlType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XmlType__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XmlType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXmlTypeAccess().getGroup_2()); }
	(rule__XmlType__Group_2__0)?
	{ after(grammarAccess.getXmlTypeAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__XmlType__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XmlType__Group_2__0__Impl
	rule__XmlType__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XmlType__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXmlTypeAccess().getLeftCurlyBracketKeyword_2_0()); }
	'{'
	{ after(grammarAccess.getXmlTypeAccess().getLeftCurlyBracketKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XmlType__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XmlType__Group_2__1__Impl
	rule__XmlType__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XmlType__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXmlTypeAccess().getXpathKeyword_2_1()); }
	'xpath'
	{ after(grammarAccess.getXmlTypeAccess().getXpathKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XmlType__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XmlType__Group_2__2__Impl
	rule__XmlType__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XmlType__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXmlTypeAccess().getEqualsSignKeyword_2_2()); }
	'='
	{ after(grammarAccess.getXmlTypeAccess().getEqualsSignKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XmlType__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XmlType__Group_2__3__Impl
	rule__XmlType__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__XmlType__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXmlTypeAccess().getPathAssignment_2_3()); }
	(rule__XmlType__PathAssignment_2_3)
	{ after(grammarAccess.getXmlTypeAccess().getPathAssignment_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XmlType__Group_2__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XmlType__Group_2__4__Impl
	rule__XmlType__Group_2__5
;
finally {
	restoreStackSize(stackSize);
}

rule__XmlType__Group_2__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXmlTypeAccess().getCommaKeyword_2_4()); }
	','
	{ after(grammarAccess.getXmlTypeAccess().getCommaKeyword_2_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XmlType__Group_2__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XmlType__Group_2__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XmlType__Group_2__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXmlTypeAccess().getRightCurlyBracketKeyword_2_5()); }
	'}'
	{ after(grammarAccess.getXmlTypeAccess().getRightCurlyBracketKeyword_2_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JsonType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JsonType__Group__0__Impl
	rule__JsonType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JsonType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJsonTypeAccess().getJsonTypeAction_0()); }
	()
	{ after(grammarAccess.getJsonTypeAccess().getJsonTypeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JsonType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JsonType__Group__1__Impl
	rule__JsonType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__JsonType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJsonTypeAccess().getJsonKeyword_1()); }
	'json'
	{ after(grammarAccess.getJsonTypeAccess().getJsonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JsonType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JsonType__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JsonType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJsonTypeAccess().getGroup_2()); }
	(rule__JsonType__Group_2__0)?
	{ after(grammarAccess.getJsonTypeAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JsonType__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JsonType__Group_2__0__Impl
	rule__JsonType__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JsonType__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJsonTypeAccess().getLeftCurlyBracketKeyword_2_0()); }
	'{'
	{ after(grammarAccess.getJsonTypeAccess().getLeftCurlyBracketKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JsonType__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JsonType__Group_2__1__Impl
	rule__JsonType__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__JsonType__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJsonTypeAccess().getJsonpathKeyword_2_1()); }
	'jsonpath'
	{ after(grammarAccess.getJsonTypeAccess().getJsonpathKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JsonType__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JsonType__Group_2__2__Impl
	rule__JsonType__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__JsonType__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJsonTypeAccess().getEqualsSignKeyword_2_2()); }
	'='
	{ after(grammarAccess.getJsonTypeAccess().getEqualsSignKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JsonType__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JsonType__Group_2__3__Impl
	rule__JsonType__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__JsonType__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJsonTypeAccess().getPathAssignment_2_3()); }
	(rule__JsonType__PathAssignment_2_3)
	{ after(grammarAccess.getJsonTypeAccess().getPathAssignment_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JsonType__Group_2__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JsonType__Group_2__4__Impl
	rule__JsonType__Group_2__5
;
finally {
	restoreStackSize(stackSize);
}

rule__JsonType__Group_2__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJsonTypeAccess().getCommaKeyword_2_4()); }
	','
	{ after(grammarAccess.getJsonTypeAccess().getCommaKeyword_2_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JsonType__Group_2__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JsonType__Group_2__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JsonType__Group_2__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJsonTypeAccess().getRightCurlyBracketKeyword_2_5()); }
	'}'
	{ after(grammarAccess.getJsonTypeAccess().getRightCurlyBracketKeyword_2_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__YamlType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__YamlType__Group__0__Impl
	rule__YamlType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__YamlType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getYamlTypeAccess().getYamlTypeAction_0()); }
	()
	{ after(grammarAccess.getYamlTypeAccess().getYamlTypeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__YamlType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__YamlType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__YamlType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getYamlTypeAccess().getYamlKeyword_1()); }
	'yaml'
	{ after(grammarAccess.getYamlTypeAccess().getYamlKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CsvType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CsvType__Group__0__Impl
	rule__CsvType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CsvType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCsvTypeAccess().getCsvTypeAction_0()); }
	()
	{ after(grammarAccess.getCsvTypeAccess().getCsvTypeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CsvType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CsvType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CsvType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCsvTypeAccess().getCsvKeyword_1()); }
	'csv'
	{ after(grammarAccess.getCsvTypeAccess().getCsvKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AutoType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AutoType__Group__0__Impl
	rule__AutoType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AutoType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAutoTypeAccess().getAutoTypeAction_0()); }
	()
	{ after(grammarAccess.getAutoTypeAccess().getAutoTypeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AutoType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AutoType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AutoType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAutoTypeAccess().getAutoKeyword_1()); }
	'auto'
	{ after(grammarAccess.getAutoTypeAccess().getAutoKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__HtmlType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HtmlType__Group__0__Impl
	rule__HtmlType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HtmlType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHtmlTypeAccess().getHtmlTypeAction_0()); }
	()
	{ after(grammarAccess.getHtmlTypeAccess().getHtmlTypeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HtmlType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HtmlType__Group__1__Impl
	rule__HtmlType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__HtmlType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHtmlTypeAccess().getHtmlKeyword_1()); }
	'html'
	{ after(grammarAccess.getHtmlTypeAccess().getHtmlKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HtmlType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HtmlType__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HtmlType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHtmlTypeAccess().getGroup_2()); }
	(rule__HtmlType__Group_2__0)?
	{ after(grammarAccess.getHtmlTypeAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__HtmlType__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HtmlType__Group_2__0__Impl
	rule__HtmlType__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HtmlType__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHtmlTypeAccess().getLeftCurlyBracketKeyword_2_0()); }
	'{'
	{ after(grammarAccess.getHtmlTypeAccess().getLeftCurlyBracketKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HtmlType__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HtmlType__Group_2__1__Impl
	rule__HtmlType__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__HtmlType__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHtmlTypeAccess().getCssKeyword_2_1()); }
	'css'
	{ after(grammarAccess.getHtmlTypeAccess().getCssKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HtmlType__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HtmlType__Group_2__2__Impl
	rule__HtmlType__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__HtmlType__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHtmlTypeAccess().getEqualsSignKeyword_2_2()); }
	'='
	{ after(grammarAccess.getHtmlTypeAccess().getEqualsSignKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HtmlType__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HtmlType__Group_2__3__Impl
	rule__HtmlType__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__HtmlType__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHtmlTypeAccess().getCssPathAssignment_2_3()); }
	(rule__HtmlType__CssPathAssignment_2_3)
	{ after(grammarAccess.getHtmlTypeAccess().getCssPathAssignment_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HtmlType__Group_2__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HtmlType__Group_2__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HtmlType__Group_2__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHtmlTypeAccess().getRightCurlyBracketKeyword_2_4()); }
	'}'
	{ after(grammarAccess.getHtmlTypeAccess().getRightCurlyBracketKeyword_2_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SourceStore__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SourceStore__Group__0__Impl
	rule__SourceStore__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceStore__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceStoreAccess().getStoreKeyword_0()); }
	'store'
	{ after(grammarAccess.getSourceStoreAccess().getStoreKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceStore__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SourceStore__Group__1__Impl
	rule__SourceStore__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceStore__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceStoreAccess().getMetadataAssignment_1()); }
	(rule__SourceStore__MetadataAssignment_1)
	{ after(grammarAccess.getSourceStoreAccess().getMetadataAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceStore__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SourceStore__Group__2__Impl
	rule__SourceStore__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceStore__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceStoreAccess().getInKeyword_2()); }
	'in'
	{ after(grammarAccess.getSourceStoreAccess().getInKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceStore__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SourceStore__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceStore__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceStoreAccess().getColumnAssignment_3()); }
	(rule__SourceStore__ColumnAssignment_3)
	{ after(grammarAccess.getSourceStoreAccess().getColumnAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SourceCoumnSelect__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SourceCoumnSelect__Group__0__Impl
	rule__SourceCoumnSelect__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceCoumnSelect__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceCoumnSelectAccess().getSelectingKeyword_0()); }
	'selecting'
	{ after(grammarAccess.getSourceCoumnSelectAccess().getSelectingKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceCoumnSelect__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SourceCoumnSelect__Group__1__Impl
	rule__SourceCoumnSelect__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceCoumnSelect__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceCoumnSelectAccess().getLeftSquareBracketKeyword_1()); }
	'['
	{ after(grammarAccess.getSourceCoumnSelectAccess().getLeftSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceCoumnSelect__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SourceCoumnSelect__Group__2__Impl
	rule__SourceCoumnSelect__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceCoumnSelect__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceCoumnSelectAccess().getColumnAssignment_2()); }
	(rule__SourceCoumnSelect__ColumnAssignment_2)
	{ after(grammarAccess.getSourceCoumnSelectAccess().getColumnAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceCoumnSelect__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SourceCoumnSelect__Group__3__Impl
	rule__SourceCoumnSelect__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceCoumnSelect__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceCoumnSelectAccess().getGroup_3()); }
	(rule__SourceCoumnSelect__Group_3__0)*
	{ after(grammarAccess.getSourceCoumnSelectAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceCoumnSelect__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SourceCoumnSelect__Group__4__Impl
	rule__SourceCoumnSelect__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceCoumnSelect__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceCoumnSelectAccess().getCommaKeyword_4()); }
	(',')?
	{ after(grammarAccess.getSourceCoumnSelectAccess().getCommaKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceCoumnSelect__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SourceCoumnSelect__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceCoumnSelect__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceCoumnSelectAccess().getRightSquareBracketKeyword_5()); }
	']'
	{ after(grammarAccess.getSourceCoumnSelectAccess().getRightSquareBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SourceCoumnSelect__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SourceCoumnSelect__Group_3__0__Impl
	rule__SourceCoumnSelect__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceCoumnSelect__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceCoumnSelectAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getSourceCoumnSelectAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceCoumnSelect__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SourceCoumnSelect__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceCoumnSelect__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceCoumnSelectAccess().getColumnAssignment_3_1()); }
	(rule__SourceCoumnSelect__ColumnAssignment_3_1)
	{ after(grammarAccess.getSourceCoumnSelectAccess().getColumnAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Source__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Source__Group__0__Impl
	rule__Source__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceAccess().getNameAssignment_0()); }
	(rule__Source__NameAssignment_0)
	{ after(grammarAccess.getSourceAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Source__Group__1__Impl
	rule__Source__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getSourceAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Source__Group__2__Impl
	rule__Source__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceAccess().getImportKeyword_2()); }
	'import'
	{ after(grammarAccess.getSourceAccess().getImportKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Source__Group__3__Impl
	rule__Source__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceAccess().getQueryAssignment_3()); }
	(rule__Source__QueryAssignment_3)?
	{ after(grammarAccess.getSourceAccess().getQueryAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Source__Group__4__Impl
	rule__Source__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceAccess().getFromKeyword_4()); }
	'from'
	{ after(grammarAccess.getSourceAccess().getFromKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Source__Group__5__Impl
	rule__Source__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceAccess().getFilePathAssignment_5()); }
	(rule__Source__FilePathAssignment_5)
	{ after(grammarAccess.getSourceAccess().getFilePathAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Source__Group__6__Impl
	rule__Source__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceAccess().getGroup_6()); }
	(rule__Source__Group_6__0)?
	{ after(grammarAccess.getSourceAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Source__Group__7__Impl
	rule__Source__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceAccess().getStoreAssignment_7()); }
	(rule__Source__StoreAssignment_7)*
	{ after(grammarAccess.getSourceAccess().getStoreAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Source__Group__8__Impl
	rule__Source__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceAccess().getSelectAssignment_8()); }
	(rule__Source__SelectAssignment_8)?
	{ after(grammarAccess.getSourceAccess().getSelectAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Source__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceAccess().getSemicolonKeyword_9()); }
	';'
	{ after(grammarAccess.getSourceAccess().getSemicolonKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Source__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Source__Group_6__0__Impl
	rule__Source__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceAccess().getAsKeyword_6_0()); }
	'as'
	{ after(grammarAccess.getSourceAccess().getAsKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Source__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceAccess().getInputTypeAssignment_6_1()); }
	(rule__Source__InputTypeAssignment_6_1)
	{ after(grammarAccess.getSourceAccess().getInputTypeAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CanonicalizePathTransformation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CanonicalizePathTransformation__Group__0__Impl
	rule__CanonicalizePathTransformation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CanonicalizePathTransformation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCanonicalizePathTransformationAccess().getCanonicalizePathTransformationAction_0()); }
	()
	{ after(grammarAccess.getCanonicalizePathTransformationAccess().getCanonicalizePathTransformationAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CanonicalizePathTransformation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CanonicalizePathTransformation__Group__1__Impl
	rule__CanonicalizePathTransformation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CanonicalizePathTransformation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCanonicalizePathTransformationAccess().getCanonicalizeKeyword_1()); }
	'canonicalize'
	{ after(grammarAccess.getCanonicalizePathTransformationAccess().getCanonicalizeKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CanonicalizePathTransformation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CanonicalizePathTransformation__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CanonicalizePathTransformation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCanonicalizePathTransformationAccess().getPathKeyword_2()); }
	'path'
	{ after(grammarAccess.getCanonicalizePathTransformationAccess().getPathKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GetPathTransformation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GetPathTransformation__Group__0__Impl
	rule__GetPathTransformation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GetPathTransformation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGetPathTransformationAccess().getGetPathTransformationAction_0()); }
	()
	{ after(grammarAccess.getGetPathTransformationAccess().getGetPathTransformationAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GetPathTransformation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GetPathTransformation__Group__1__Impl
	rule__GetPathTransformation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GetPathTransformation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGetPathTransformationAccess().getGetKeyword_1()); }
	'get'
	{ after(grammarAccess.getGetPathTransformationAccess().getGetKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GetPathTransformation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GetPathTransformation__Group__2__Impl
	rule__GetPathTransformation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GetPathTransformation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGetPathTransformationAccess().getPathKeyword_2()); }
	'path'
	{ after(grammarAccess.getGetPathTransformationAccess().getPathKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GetPathTransformation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GetPathTransformation__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GetPathTransformation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGetPathTransformationAccess().getNameKeyword_3()); }
	'name'
	{ after(grammarAccess.getGetPathTransformationAccess().getNameKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AppendPathTransformation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AppendPathTransformation__Group__0__Impl
	rule__AppendPathTransformation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AppendPathTransformation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAppendPathTransformationAccess().getAppendKeyword_0()); }
	'append'
	{ after(grammarAccess.getAppendPathTransformationAccess().getAppendKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AppendPathTransformation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AppendPathTransformation__Group__1__Impl
	rule__AppendPathTransformation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AppendPathTransformation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAppendPathTransformationAccess().getPathKeyword_1()); }
	'path'
	{ after(grammarAccess.getAppendPathTransformationAccess().getPathKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AppendPathTransformation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AppendPathTransformation__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AppendPathTransformation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAppendPathTransformationAccess().getPathAssignment_2()); }
	(rule__AppendPathTransformation__PathAssignment_2)
	{ after(grammarAccess.getAppendPathTransformationAccess().getPathAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PathTransformation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PathTransformation__Group__0__Impl
	rule__PathTransformation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PathTransformation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPathTransformationAccess().getInKeyword_0()); }
	'in'
	{ after(grammarAccess.getPathTransformationAccess().getInKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PathTransformation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PathTransformation__Group__1__Impl
	rule__PathTransformation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PathTransformation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPathTransformationAccess().getColumnAssignment_1()); }
	(rule__PathTransformation__ColumnAssignment_1)
	{ after(grammarAccess.getPathTransformationAccess().getColumnAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PathTransformation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PathTransformation__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PathTransformation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPathTransformationAccess().getOperationAssignment_2()); }
	(rule__PathTransformation__OperationAssignment_2)
	{ after(grammarAccess.getPathTransformationAccess().getOperationAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FoldMaxTranformation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FoldMaxTranformation__Group__0__Impl
	rule__FoldMaxTranformation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FoldMaxTranformation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFoldMaxTranformationAccess().getInKeyword_0()); }
	'in'
	{ after(grammarAccess.getFoldMaxTranformationAccess().getInKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FoldMaxTranformation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FoldMaxTranformation__Group__1__Impl
	rule__FoldMaxTranformation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FoldMaxTranformation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFoldMaxTranformationAccess().getColumnAssignment_1()); }
	(rule__FoldMaxTranformation__ColumnAssignment_1)
	{ after(grammarAccess.getFoldMaxTranformationAccess().getColumnAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FoldMaxTranformation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FoldMaxTranformation__Group__2__Impl
	rule__FoldMaxTranformation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FoldMaxTranformation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFoldMaxTranformationAccess().getFoldKeyword_2()); }
	'fold'
	{ after(grammarAccess.getFoldMaxTranformationAccess().getFoldKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FoldMaxTranformation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FoldMaxTranformation__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FoldMaxTranformation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFoldMaxTranformationAccess().getMaxKeyword_3()); }
	'max'
	{ after(grammarAccess.getFoldMaxTranformationAccess().getMaxKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FoldAverageTranformation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FoldAverageTranformation__Group__0__Impl
	rule__FoldAverageTranformation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FoldAverageTranformation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFoldAverageTranformationAccess().getFoldAverageTranformationAction_0()); }
	()
	{ after(grammarAccess.getFoldAverageTranformationAccess().getFoldAverageTranformationAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FoldAverageTranformation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FoldAverageTranformation__Group__1__Impl
	rule__FoldAverageTranformation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FoldAverageTranformation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFoldAverageTranformationAccess().getFoldKeyword_1()); }
	'fold'
	{ after(grammarAccess.getFoldAverageTranformationAccess().getFoldKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FoldAverageTranformation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FoldAverageTranformation__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FoldAverageTranformation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFoldAverageTranformationAccess().getAvgKeyword_2()); }
	'avg'
	{ after(grammarAccess.getFoldAverageTranformationAccess().getAvgKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FoldSumTranformation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FoldSumTranformation__Group__0__Impl
	rule__FoldSumTranformation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FoldSumTranformation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFoldSumTranformationAccess().getFoldSumTranformationAction_0()); }
	()
	{ after(grammarAccess.getFoldSumTranformationAccess().getFoldSumTranformationAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FoldSumTranformation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FoldSumTranformation__Group__1__Impl
	rule__FoldSumTranformation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FoldSumTranformation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFoldSumTranformationAccess().getFoldKeyword_1()); }
	'fold'
	{ after(grammarAccess.getFoldSumTranformationAccess().getFoldKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FoldSumTranformation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FoldSumTranformation__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FoldSumTranformation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFoldSumTranformationAccess().getSumKeyword_2()); }
	'sum'
	{ after(grammarAccess.getFoldSumTranformationAccess().getSumKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GroupBy__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GroupBy__Group__0__Impl
	rule__GroupBy__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupBy__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGroupByAccess().getGroupKeyword_0()); }
	'group'
	{ after(grammarAccess.getGroupByAccess().getGroupKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupBy__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GroupBy__Group__1__Impl
	rule__GroupBy__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupBy__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGroupByAccess().getByKeyword_1()); }
	'by'
	{ after(grammarAccess.getGroupByAccess().getByKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupBy__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GroupBy__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupBy__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGroupByAccess().getColumnAssignment_2()); }
	(rule__GroupBy__ColumnAssignment_2)
	{ after(grammarAccess.getGroupByAccess().getColumnAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FoldTransformation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FoldTransformation__Group__0__Impl
	rule__FoldTransformation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FoldTransformation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFoldTransformationAccess().getOperationAssignment_0()); }
	(rule__FoldTransformation__OperationAssignment_0)
	{ after(grammarAccess.getFoldTransformationAccess().getOperationAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FoldTransformation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FoldTransformation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FoldTransformation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFoldTransformationAccess().getGroupByAssignment_1()); }
	(rule__FoldTransformation__GroupByAssignment_1)?
	{ after(grammarAccess.getFoldTransformationAccess().getGroupByAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AddColumnTransformation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddColumnTransformation__Group__0__Impl
	rule__AddColumnTransformation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddColumnTransformation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddColumnTransformationAccess().getAddKeyword_0()); }
	'add'
	{ after(grammarAccess.getAddColumnTransformationAccess().getAddKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddColumnTransformation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddColumnTransformation__Group__1__Impl
	rule__AddColumnTransformation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AddColumnTransformation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddColumnTransformationAccess().getColumnAssignment_1()); }
	(rule__AddColumnTransformation__ColumnAssignment_1)
	{ after(grammarAccess.getAddColumnTransformationAccess().getColumnAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddColumnTransformation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddColumnTransformation__Group__2__Impl
	rule__AddColumnTransformation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AddColumnTransformation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddColumnTransformationAccess().getWithKeyword_2()); }
	'with'
	{ after(grammarAccess.getAddColumnTransformationAccess().getWithKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddColumnTransformation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddColumnTransformation__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddColumnTransformation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddColumnTransformationAccess().getValueAssignment_3()); }
	(rule__AddColumnTransformation__ValueAssignment_3)
	{ after(grammarAccess.getAddColumnTransformationAccess().getValueAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RemoveColumnTransformation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RemoveColumnTransformation__Group__0__Impl
	rule__RemoveColumnTransformation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RemoveColumnTransformation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRemoveColumnTransformationAccess().getRemoveKeyword_0()); }
	'remove'
	{ after(grammarAccess.getRemoveColumnTransformationAccess().getRemoveKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RemoveColumnTransformation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RemoveColumnTransformation__Group__1__Impl
	rule__RemoveColumnTransformation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RemoveColumnTransformation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRemoveColumnTransformationAccess().getLeftSquareBracketKeyword_1()); }
	'['
	{ after(grammarAccess.getRemoveColumnTransformationAccess().getLeftSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RemoveColumnTransformation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RemoveColumnTransformation__Group__2__Impl
	rule__RemoveColumnTransformation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RemoveColumnTransformation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRemoveColumnTransformationAccess().getColumnAssignment_2()); }
	(rule__RemoveColumnTransformation__ColumnAssignment_2)
	{ after(grammarAccess.getRemoveColumnTransformationAccess().getColumnAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RemoveColumnTransformation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RemoveColumnTransformation__Group__3__Impl
	rule__RemoveColumnTransformation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RemoveColumnTransformation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRemoveColumnTransformationAccess().getGroup_3()); }
	(rule__RemoveColumnTransformation__Group_3__0)*
	{ after(grammarAccess.getRemoveColumnTransformationAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RemoveColumnTransformation__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RemoveColumnTransformation__Group__4__Impl
	rule__RemoveColumnTransformation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RemoveColumnTransformation__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRemoveColumnTransformationAccess().getCommaKeyword_4()); }
	(',')?
	{ after(grammarAccess.getRemoveColumnTransformationAccess().getCommaKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RemoveColumnTransformation__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RemoveColumnTransformation__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RemoveColumnTransformation__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRemoveColumnTransformationAccess().getRightSquareBracketKeyword_5()); }
	']'
	{ after(grammarAccess.getRemoveColumnTransformationAccess().getRightSquareBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RemoveColumnTransformation__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RemoveColumnTransformation__Group_3__0__Impl
	rule__RemoveColumnTransformation__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RemoveColumnTransformation__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRemoveColumnTransformationAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getRemoveColumnTransformationAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RemoveColumnTransformation__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RemoveColumnTransformation__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RemoveColumnTransformation__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRemoveColumnTransformationAccess().getColumnAssignment_3_1()); }
	(rule__RemoveColumnTransformation__ColumnAssignment_3_1)
	{ after(grammarAccess.getRemoveColumnTransformationAccess().getColumnAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RenameColumnTransformation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RenameColumnTransformation__Group__0__Impl
	rule__RenameColumnTransformation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameColumnTransformation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRenameColumnTransformationAccess().getRenameKeyword_0()); }
	'rename'
	{ after(grammarAccess.getRenameColumnTransformationAccess().getRenameKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameColumnTransformation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RenameColumnTransformation__Group__1__Impl
	rule__RenameColumnTransformation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameColumnTransformation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRenameColumnTransformationAccess().getFromAssignment_1()); }
	(rule__RenameColumnTransformation__FromAssignment_1)
	{ after(grammarAccess.getRenameColumnTransformationAccess().getFromAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameColumnTransformation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RenameColumnTransformation__Group__2__Impl
	rule__RenameColumnTransformation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameColumnTransformation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRenameColumnTransformationAccess().getToKeyword_2()); }
	'to'
	{ after(grammarAccess.getRenameColumnTransformationAccess().getToKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameColumnTransformation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RenameColumnTransformation__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameColumnTransformation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRenameColumnTransformationAccess().getToAssignment_3()); }
	(rule__RenameColumnTransformation__ToAssignment_3)
	{ after(grammarAccess.getRenameColumnTransformationAccess().getToAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SelectColumnTransformation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectColumnTransformation__Group__0__Impl
	rule__SelectColumnTransformation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectColumnTransformation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectColumnTransformationAccess().getSelectKeyword_0()); }
	'select'
	{ after(grammarAccess.getSelectColumnTransformationAccess().getSelectKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectColumnTransformation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectColumnTransformation__Group__1__Impl
	rule__SelectColumnTransformation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectColumnTransformation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectColumnTransformationAccess().getLeftSquareBracketKeyword_1()); }
	'['
	{ after(grammarAccess.getSelectColumnTransformationAccess().getLeftSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectColumnTransformation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectColumnTransformation__Group__2__Impl
	rule__SelectColumnTransformation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectColumnTransformation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectColumnTransformationAccess().getColumnAssignment_2()); }
	(rule__SelectColumnTransformation__ColumnAssignment_2)
	{ after(grammarAccess.getSelectColumnTransformationAccess().getColumnAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectColumnTransformation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectColumnTransformation__Group__3__Impl
	rule__SelectColumnTransformation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectColumnTransformation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectColumnTransformationAccess().getGroup_3()); }
	(rule__SelectColumnTransformation__Group_3__0)*
	{ after(grammarAccess.getSelectColumnTransformationAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectColumnTransformation__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectColumnTransformation__Group__4__Impl
	rule__SelectColumnTransformation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectColumnTransformation__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectColumnTransformationAccess().getCommaKeyword_4()); }
	(',')?
	{ after(grammarAccess.getSelectColumnTransformationAccess().getCommaKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectColumnTransformation__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectColumnTransformation__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectColumnTransformation__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectColumnTransformationAccess().getRightSquareBracketKeyword_5()); }
	']'
	{ after(grammarAccess.getSelectColumnTransformationAccess().getRightSquareBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SelectColumnTransformation__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectColumnTransformation__Group_3__0__Impl
	rule__SelectColumnTransformation__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectColumnTransformation__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectColumnTransformationAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getSelectColumnTransformationAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectColumnTransformation__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectColumnTransformation__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectColumnTransformation__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectColumnTransformationAccess().getColumnAssignment_3_1()); }
	(rule__SelectColumnTransformation__ColumnAssignment_3_1)
	{ after(grammarAccess.getSelectColumnTransformationAccess().getColumnAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Pipeline__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pipeline__Group__0__Impl
	rule__Pipeline__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pipeline__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPipelineAccess().getNameAssignment_0()); }
	(rule__Pipeline__NameAssignment_0)
	{ after(grammarAccess.getPipelineAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pipeline__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pipeline__Group__1__Impl
	rule__Pipeline__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Pipeline__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPipelineAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getPipelineAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pipeline__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pipeline__Group__2__Impl
	rule__Pipeline__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Pipeline__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPipelineAccess().getPipeKeyword_2()); }
	'pipe'
	{ after(grammarAccess.getPipelineAccess().getPipeKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pipeline__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pipeline__Group__3__Impl
	rule__Pipeline__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Pipeline__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPipelineAccess().getLeftSquareBracketKeyword_3()); }
	'['
	{ after(grammarAccess.getPipelineAccess().getLeftSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pipeline__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pipeline__Group__4__Impl
	rule__Pipeline__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Pipeline__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPipelineAccess().getGroup_4()); }
	(rule__Pipeline__Group_4__0)
	{ after(grammarAccess.getPipelineAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pipeline__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pipeline__Group__5__Impl
	rule__Pipeline__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Pipeline__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPipelineAccess().getRightSquareBracketKeyword_5()); }
	']'
	{ after(grammarAccess.getPipelineAccess().getRightSquareBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pipeline__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pipeline__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pipeline__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPipelineAccess().getSemicolonKeyword_6()); }
	';'
	{ after(grammarAccess.getPipelineAccess().getSemicolonKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Pipeline__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pipeline__Group_4__0__Impl
	rule__Pipeline__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pipeline__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPipelineAccess().getTransformationAssignment_4_0()); }
	(rule__Pipeline__TransformationAssignment_4_0)
	{ after(grammarAccess.getPipelineAccess().getTransformationAssignment_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pipeline__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pipeline__Group_4__1__Impl
	rule__Pipeline__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Pipeline__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPipelineAccess().getGroup_4_1()); }
	(rule__Pipeline__Group_4_1__0)*
	{ after(grammarAccess.getPipelineAccess().getGroup_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pipeline__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pipeline__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pipeline__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPipelineAccess().getCommaKeyword_4_2()); }
	(',')?
	{ after(grammarAccess.getPipelineAccess().getCommaKeyword_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Pipeline__Group_4_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pipeline__Group_4_1__0__Impl
	rule__Pipeline__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pipeline__Group_4_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPipelineAccess().getCommaKeyword_4_1_0()); }
	','
	{ after(grammarAccess.getPipelineAccess().getCommaKeyword_4_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pipeline__Group_4_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pipeline__Group_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pipeline__Group_4_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPipelineAccess().getTransformationAssignment_4_1_1()); }
	(rule__Pipeline__TransformationAssignment_4_1_1)
	{ after(grammarAccess.getPipelineAccess().getTransformationAssignment_4_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Export__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Export__Group__0__Impl
	rule__Export__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExportAccess().getExportKeyword_0()); }
	'export'
	{ after(grammarAccess.getExportAccess().getExportKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Export__Group__1__Impl
	rule__Export__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExportAccess().getTableAssignment_1()); }
	(rule__Export__TableAssignment_1)
	{ after(grammarAccess.getExportAccess().getTableAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Export__Group__2__Impl
	rule__Export__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExportAccess().getToKeyword_2()); }
	'to'
	{ after(grammarAccess.getExportAccess().getToKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Export__Group__3__Impl
	rule__Export__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExportAccess().getPathAssignment_3()); }
	(rule__Export__PathAssignment_3)
	{ after(grammarAccess.getExportAccess().getPathAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Export__Group__4__Impl
	rule__Export__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExportAccess().getAsKeyword_4()); }
	'as'
	{ after(grammarAccess.getExportAccess().getAsKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Export__Group__5__Impl
	rule__Export__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExportAccess().getOutputAssignment_5()); }
	(rule__Export__OutputAssignment_5)
	{ after(grammarAccess.getExportAccess().getOutputAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Export__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExportAccess().getSemicolonKeyword_6()); }
	';'
	{ after(grammarAccess.getExportAccess().getSemicolonKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MyDsl__PipelinesAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMyDslAccess().getPipelinesPipelineParserRuleCall_0_0()); }
		rulePipeline
		{ after(grammarAccess.getMyDslAccess().getPipelinesPipelineParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MyDsl__SourcesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMyDslAccess().getSourcesSourceParserRuleCall_1_0()); }
		ruleSource
		{ after(grammarAccess.getMyDslAccess().getSourcesSourceParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MyDsl__TablesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMyDslAccess().getTablesTableParserRuleCall_2_0()); }
		ruleTable
		{ after(grammarAccess.getMyDslAccess().getTablesTableParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MyDsl__ExportAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMyDslAccess().getExportExportParserRuleCall_3_0()); }
		ruleExport
		{ after(grammarAccess.getMyDslAccess().getExportExportParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinationOperations__OperationAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCombinationOperationsAccess().getOperationAlternatives_0_0()); }
		(rule__CombinationOperations__OperationAlternatives_0_0)
		{ after(grammarAccess.getCombinationOperationsAccess().getOperationAlternatives_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinationOperations__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCombinationOperationsAccess().getTypeAlternatives_1_0()); }
		(rule__CombinationOperations__TypeAlternatives_1_0)
		{ after(grammarAccess.getCombinationOperationsAccess().getTypeAlternatives_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinationOperations__TableOperationAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCombinationOperationsAccess().getTableOperationTableOperationsParserRuleCall_3_0()); }
		ruleTableOperations
		{ after(grammarAccess.getCombinationOperationsAccess().getTableOperationTableOperationsParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinationOperations__TableOperationAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCombinationOperationsAccess().getTableOperationTableOperationsParserRuleCall_4_1_0()); }
		ruleTableOperations
		{ after(grammarAccess.getCombinationOperationsAccess().getTableOperationTableOperationsParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceOperation__SourceAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSourceOperationAccess().getSourceIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getSourceOperationAccess().getSourceIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationTableOperation__TransformationAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransformationTableOperationAccess().getTransformationTransformationParserRuleCall_1_0()); }
		ruleTransformation
		{ after(grammarAccess.getTransformationTableOperationAccess().getTransformationTransformationParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PipelineTableOperation__PipelineAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPipelineTableOperationAccess().getPipelineIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getPipelineTableOperationAccess().getPipelineIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformOperation__SourceAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransformOperationAccess().getSourceSourceOperationParserRuleCall_0_0()); }
		ruleSourceOperation
		{ after(grammarAccess.getTransformOperationAccess().getSourceSourceOperationParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformOperation__OperationAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransformOperationAccess().getOperationAlternatives_1_1_0()); }
		(rule__TransformOperation__OperationAlternatives_1_1_0)
		{ after(grammarAccess.getTransformOperationAccess().getOperationAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getTableAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__OperationAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableAccess().getOperationTableOperationsParserRuleCall_2_0()); }
		ruleTableOperations
		{ after(grammarAccess.getTableAccess().getOperationTableOperationsParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XmlType__PathAssignment_2_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXmlTypeAccess().getPathSTRINGTerminalRuleCall_2_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getXmlTypeAccess().getPathSTRINGTerminalRuleCall_2_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JsonType__PathAssignment_2_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJsonTypeAccess().getPathSTRINGTerminalRuleCall_2_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getJsonTypeAccess().getPathSTRINGTerminalRuleCall_2_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HtmlType__CssPathAssignment_2_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHtmlTypeAccess().getCssPathSTRINGTerminalRuleCall_2_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getHtmlTypeAccess().getCssPathSTRINGTerminalRuleCall_2_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputType__TypeAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutputTypeAccess().getTypeAlternatives_0()); }
		(rule__OutputType__TypeAlternatives_0)
		{ after(grammarAccess.getOutputTypeAccess().getTypeAlternatives_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaData__MetadataAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMetaDataAccess().getMetadataAlternatives_0()); }
		(rule__MetaData__MetadataAlternatives_0)
		{ after(grammarAccess.getMetaDataAccess().getMetadataAlternatives_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceStore__MetadataAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSourceStoreAccess().getMetadataMetaDataParserRuleCall_1_0()); }
		ruleMetaData
		{ after(grammarAccess.getSourceStoreAccess().getMetadataMetaDataParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceStore__ColumnAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSourceStoreAccess().getColumnSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getSourceStoreAccess().getColumnSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceCoumnSelect__ColumnAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSourceCoumnSelectAccess().getColumnSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getSourceCoumnSelectAccess().getColumnSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceCoumnSelect__ColumnAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSourceCoumnSelectAccess().getColumnSTRINGTerminalRuleCall_3_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getSourceCoumnSelectAccess().getColumnSTRINGTerminalRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSourceAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getSourceAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__QueryAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSourceAccess().getQuerySTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getSourceAccess().getQuerySTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__FilePathAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSourceAccess().getFilePathSTRINGTerminalRuleCall_5_0()); }
		RULE_STRING
		{ after(grammarAccess.getSourceAccess().getFilePathSTRINGTerminalRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__InputTypeAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSourceAccess().getInputTypeInputTypeParserRuleCall_6_1_0()); }
		ruleInputType
		{ after(grammarAccess.getSourceAccess().getInputTypeInputTypeParserRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__StoreAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSourceAccess().getStoreSourceStoreParserRuleCall_7_0()); }
		ruleSourceStore
		{ after(grammarAccess.getSourceAccess().getStoreSourceStoreParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source__SelectAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSourceAccess().getSelectSourceCoumnSelectParserRuleCall_8_0()); }
		ruleSourceCoumnSelect
		{ after(grammarAccess.getSourceAccess().getSelectSourceCoumnSelectParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AppendPathTransformation__PathAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAppendPathTransformationAccess().getPathSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getAppendPathTransformationAccess().getPathSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PathTransformation__ColumnAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPathTransformationAccess().getColumnSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getPathTransformationAccess().getColumnSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PathTransformation__OperationAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPathTransformationAccess().getOperationAlternatives_2_0()); }
		(rule__PathTransformation__OperationAlternatives_2_0)
		{ after(grammarAccess.getPathTransformationAccess().getOperationAlternatives_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FoldMaxTranformation__ColumnAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFoldMaxTranformationAccess().getColumnSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getFoldMaxTranformationAccess().getColumnSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupBy__ColumnAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGroupByAccess().getColumnSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getGroupByAccess().getColumnSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FoldTransformation__OperationAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFoldTransformationAccess().getOperationAlternatives_0_0()); }
		(rule__FoldTransformation__OperationAlternatives_0_0)
		{ after(grammarAccess.getFoldTransformationAccess().getOperationAlternatives_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FoldTransformation__GroupByAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFoldTransformationAccess().getGroupByGroupByParserRuleCall_1_0()); }
		ruleGroupBy
		{ after(grammarAccess.getFoldTransformationAccess().getGroupByGroupByParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddColumnTransformation__ColumnAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddColumnTransformationAccess().getColumnSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getAddColumnTransformationAccess().getColumnSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddColumnTransformation__ValueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddColumnTransformationAccess().getValueSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getAddColumnTransformationAccess().getValueSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RemoveColumnTransformation__ColumnAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRemoveColumnTransformationAccess().getColumnSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getRemoveColumnTransformationAccess().getColumnSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RemoveColumnTransformation__ColumnAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRemoveColumnTransformationAccess().getColumnSTRINGTerminalRuleCall_3_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getRemoveColumnTransformationAccess().getColumnSTRINGTerminalRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameColumnTransformation__FromAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRenameColumnTransformationAccess().getFromSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getRenameColumnTransformationAccess().getFromSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameColumnTransformation__ToAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRenameColumnTransformationAccess().getToSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getRenameColumnTransformationAccess().getToSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectColumnTransformation__ColumnAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectColumnTransformationAccess().getColumnSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getSelectColumnTransformationAccess().getColumnSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectColumnTransformation__ColumnAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectColumnTransformationAccess().getColumnSTRINGTerminalRuleCall_3_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getSelectColumnTransformationAccess().getColumnSTRINGTerminalRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pipeline__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPipelineAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getPipelineAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pipeline__TransformationAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPipelineAccess().getTransformationTransformationParserRuleCall_4_0_0()); }
		ruleTransformation
		{ after(grammarAccess.getPipelineAccess().getTransformationTransformationParserRuleCall_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pipeline__TransformationAssignment_4_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPipelineAccess().getTransformationTransformationParserRuleCall_4_1_1_0()); }
		ruleTransformation
		{ after(grammarAccess.getPipelineAccess().getTransformationTransformationParserRuleCall_4_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__TableAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExportAccess().getTableIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getExportAccess().getTableIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__PathAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExportAccess().getPathSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getExportAccess().getPathSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__OutputAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExportAccess().getOutputOutputTypeParserRuleCall_5_0()); }
		ruleOutputType
		{ after(grammarAccess.getExportAccess().getOutputOutputTypeParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
