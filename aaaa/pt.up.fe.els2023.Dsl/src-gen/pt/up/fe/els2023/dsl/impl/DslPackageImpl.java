/**
 * generated by Xtext 2.32.0
 */
package pt.up.fe.els2023.dsl.impl;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

import pt.up.fe.els2023.dsl.AddColumnTransformation;
import pt.up.fe.els2023.dsl.AppendPathTransformation;
import pt.up.fe.els2023.dsl.Assignment;
import pt.up.fe.els2023.dsl.AutoType;
import pt.up.fe.els2023.dsl.CanonicalizePathTransformation;
import pt.up.fe.els2023.dsl.CellTransformation;
import pt.up.fe.els2023.dsl.ColumnTransformation;
import pt.up.fe.els2023.dsl.CombinationOperations;
import pt.up.fe.els2023.dsl.CsvType;
import pt.up.fe.els2023.dsl.DslFactory;
import pt.up.fe.els2023.dsl.DslPackage;
import pt.up.fe.els2023.dsl.Export;
import pt.up.fe.els2023.dsl.FoldAverageTranformation;
import pt.up.fe.els2023.dsl.FoldSumTranformation;
import pt.up.fe.els2023.dsl.FoldTransformation;
import pt.up.fe.els2023.dsl.GetPathTransformation;
import pt.up.fe.els2023.dsl.GroupBy;
import pt.up.fe.els2023.dsl.HtmlType;
import pt.up.fe.els2023.dsl.InlinePipeline;
import pt.up.fe.els2023.dsl.InlineSource;
import pt.up.fe.els2023.dsl.InputType;
import pt.up.fe.els2023.dsl.JsonType;
import pt.up.fe.els2023.dsl.MetaData;
import pt.up.fe.els2023.dsl.MyDsl;
import pt.up.fe.els2023.dsl.OutputType;
import pt.up.fe.els2023.dsl.PathTransformation;
import pt.up.fe.els2023.dsl.Pipeline;
import pt.up.fe.els2023.dsl.PipelineTableOperation;
import pt.up.fe.els2023.dsl.RemoveColumnTransformation;
import pt.up.fe.els2023.dsl.RenameColumnTransformation;
import pt.up.fe.els2023.dsl.RoundCellsTransformation;
import pt.up.fe.els2023.dsl.RowTransformation;
import pt.up.fe.els2023.dsl.SelectColumnTransformation;
import pt.up.fe.els2023.dsl.SelectPipeline;
import pt.up.fe.els2023.dsl.SelectRowsTransformation;
import pt.up.fe.els2023.dsl.SelectSource;
import pt.up.fe.els2023.dsl.SetCellsTransformation;
import pt.up.fe.els2023.dsl.SortRowsTransformation;
import pt.up.fe.els2023.dsl.Source;
import pt.up.fe.els2023.dsl.SourceCoumnSelect;
import pt.up.fe.els2023.dsl.SourceOperation;
import pt.up.fe.els2023.dsl.SourceStore;
import pt.up.fe.els2023.dsl.Table;
import pt.up.fe.els2023.dsl.TableOperations;
import pt.up.fe.els2023.dsl.TransformOperation;
import pt.up.fe.els2023.dsl.Transformation;
import pt.up.fe.els2023.dsl.TransformationTableOperation;
import pt.up.fe.els2023.dsl.XmlType;
import pt.up.fe.els2023.dsl.YamlType;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class DslPackageImpl extends EPackageImpl implements DslPackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass myDslEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass assignmentEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass combinationOperationsEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass tableOperationsEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass selectSourceEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass inlineSourceEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass sourceOperationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass transformationTableOperationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass selectPipelineEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass inlinePipelineEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass pipelineTableOperationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass transformOperationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass tableEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass xmlTypeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass jsonTypeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass yamlTypeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass csvTypeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass autoTypeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass inputTypeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass htmlTypeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass outputTypeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass metaDataEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass sourceStoreEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass sourceCoumnSelectEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass sourceEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass canonicalizePathTransformationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass getPathTransformationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass appendPathTransformationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass pathTransformationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass foldAverageTranformationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass foldSumTranformationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass groupByEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass foldTransformationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass addColumnTransformationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass removeColumnTransformationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass renameColumnTransformationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass selectColumnTransformationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass columnTransformationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass roundCellsTransformationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass setCellsTransformationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass cellTransformationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass selectRowsTransformationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass sortRowsTransformationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass rowTransformationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass transformationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass pipelineEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass exportEClass = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see pt.up.fe.els2023.dsl.DslPackage#eNS_URI
   * @see #init()
   * @generated
   */
  private DslPackageImpl()
  {
    super(eNS_URI, DslFactory.eINSTANCE);
  }
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   *
   * <p>This method is used to initialize {@link DslPackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static DslPackage init()
  {
    if (isInited) return (DslPackage)EPackage.Registry.INSTANCE.getEPackage(DslPackage.eNS_URI);

    // Obtain or create and register package
    Object registeredDslPackage = EPackage.Registry.INSTANCE.get(eNS_URI);
    DslPackageImpl theDslPackage = registeredDslPackage instanceof DslPackageImpl ? (DslPackageImpl)registeredDslPackage : new DslPackageImpl();

    isInited = true;

    // Create package meta-data objects
    theDslPackage.createPackageContents();

    // Initialize created meta-data
    theDslPackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theDslPackage.freeze();

    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(DslPackage.eNS_URI, theDslPackage);
    return theDslPackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getMyDsl()
  {
    return myDslEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getMyDsl_Assignment()
  {
    return (EReference)myDslEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getMyDsl_Export()
  {
    return (EReference)myDslEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getAssignment()
  {
    return assignmentEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getAssignment_Name()
  {
    return (EAttribute)assignmentEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getAssignment_Expression()
  {
    return (EReference)assignmentEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getCombinationOperations()
  {
    return combinationOperationsEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getCombinationOperations_Operation()
  {
    return (EAttribute)combinationOperationsEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getCombinationOperations_Type()
  {
    return (EAttribute)combinationOperationsEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getCombinationOperations_TableOperation()
  {
    return (EReference)combinationOperationsEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getTableOperations()
  {
    return tableOperationsEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getTableOperations_Operation()
  {
    return (EReference)tableOperationsEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getTableOperations_Transformations()
  {
    return (EReference)tableOperationsEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSelectSource()
  {
    return selectSourceEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getSelectSource_Name()
  {
    return (EAttribute)selectSourceEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getInlineSource()
  {
    return inlineSourceEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getInlineSource_SourceExpr()
  {
    return (EReference)inlineSourceEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSourceOperation()
  {
    return sourceOperationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSourceOperation_Source()
  {
    return (EReference)sourceOperationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getTransformationTableOperation()
  {
    return transformationTableOperationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getTransformationTableOperation_Transformation()
  {
    return (EReference)transformationTableOperationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSelectPipeline()
  {
    return selectPipelineEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getSelectPipeline_Name()
  {
    return (EAttribute)selectPipelineEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getInlinePipeline()
  {
    return inlinePipelineEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getInlinePipeline_PipelineExpr()
  {
    return (EReference)inlinePipelineEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPipelineTableOperation()
  {
    return pipelineTableOperationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPipelineTableOperation_Pipeline()
  {
    return (EReference)pipelineTableOperationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getTransformOperation()
  {
    return transformOperationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getTransformOperation_Operation()
  {
    return (EReference)transformOperationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getTable()
  {
    return tableEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getTable_Operation()
  {
    return (EReference)tableEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getXmlType()
  {
    return xmlTypeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getXmlType_Path()
  {
    return (EAttribute)xmlTypeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getJsonType()
  {
    return jsonTypeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getJsonType_Path()
  {
    return (EAttribute)jsonTypeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getYamlType()
  {
    return yamlTypeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getCsvType()
  {
    return csvTypeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getAutoType()
  {
    return autoTypeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getInputType()
  {
    return inputTypeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getHtmlType()
  {
    return htmlTypeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getHtmlType_CssPath()
  {
    return (EAttribute)htmlTypeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getOutputType()
  {
    return outputTypeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getOutputType_Type()
  {
    return (EReference)outputTypeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getMetaData()
  {
    return metaDataEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getMetaData_Metadata()
  {
    return (EAttribute)metaDataEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSourceStore()
  {
    return sourceStoreEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSourceStore_Metadata()
  {
    return (EReference)sourceStoreEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getSourceStore_Column()
  {
    return (EAttribute)sourceStoreEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSourceCoumnSelect()
  {
    return sourceCoumnSelectEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getSourceCoumnSelect_Column()
  {
    return (EAttribute)sourceCoumnSelectEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSource()
  {
    return sourceEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getSource_Query()
  {
    return (EAttribute)sourceEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getSource_FilePath()
  {
    return (EAttribute)sourceEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSource_InputType()
  {
    return (EReference)sourceEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSource_Store()
  {
    return (EReference)sourceEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSource_Select()
  {
    return (EReference)sourceEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getCanonicalizePathTransformation()
  {
    return canonicalizePathTransformationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getGetPathTransformation()
  {
    return getPathTransformationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getAppendPathTransformation()
  {
    return appendPathTransformationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getAppendPathTransformation_Path()
  {
    return (EAttribute)appendPathTransformationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPathTransformation()
  {
    return pathTransformationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPathTransformation_Operation()
  {
    return (EReference)pathTransformationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getPathTransformation_Column()
  {
    return (EAttribute)pathTransformationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFoldAverageTranformation()
  {
    return foldAverageTranformationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFoldSumTranformation()
  {
    return foldSumTranformationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getGroupBy()
  {
    return groupByEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getGroupBy_Column()
  {
    return (EAttribute)groupByEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFoldTransformation()
  {
    return foldTransformationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFoldTransformation_Operation()
  {
    return (EReference)foldTransformationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFoldTransformation_GroupBy()
  {
    return (EReference)foldTransformationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getAddColumnTransformation()
  {
    return addColumnTransformationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getAddColumnTransformation_Column()
  {
    return (EAttribute)addColumnTransformationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getAddColumnTransformation_Value()
  {
    return (EAttribute)addColumnTransformationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getRemoveColumnTransformation()
  {
    return removeColumnTransformationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getRemoveColumnTransformation_Column()
  {
    return (EAttribute)removeColumnTransformationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getRenameColumnTransformation()
  {
    return renameColumnTransformationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getRenameColumnTransformation_Regex()
  {
    return (EAttribute)renameColumnTransformationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getRenameColumnTransformation_From()
  {
    return (EAttribute)renameColumnTransformationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getRenameColumnTransformation_To()
  {
    return (EAttribute)renameColumnTransformationEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSelectColumnTransformation()
  {
    return selectColumnTransformationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getSelectColumnTransformation_Column()
  {
    return (EAttribute)selectColumnTransformationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getColumnTransformation()
  {
    return columnTransformationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getRoundCellsTransformation()
  {
    return roundCellsTransformationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getRoundCellsTransformation_Columns()
  {
    return (EAttribute)roundCellsTransformationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getRoundCellsTransformation_Digits()
  {
    return (EAttribute)roundCellsTransformationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSetCellsTransformation()
  {
    return setCellsTransformationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getSetCellsTransformation_Value()
  {
    return (EAttribute)setCellsTransformationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getSetCellsTransformation_Column()
  {
    return (EAttribute)setCellsTransformationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getSetCellsTransformation_Row()
  {
    return (EAttribute)setCellsTransformationEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getCellTransformation()
  {
    return cellTransformationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSelectRowsTransformation()
  {
    return selectRowsTransformationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getSelectRowsTransformation_Start()
  {
    return (EAttribute)selectRowsTransformationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getSelectRowsTransformation_Length()
  {
    return (EAttribute)selectRowsTransformationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getSelectRowsTransformation_GroupBy()
  {
    return (EAttribute)selectRowsTransformationEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSortRowsTransformation()
  {
    return sortRowsTransformationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getSortRowsTransformation_Columns()
  {
    return (EAttribute)sortRowsTransformationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getSortRowsTransformation_Order()
  {
    return (EAttribute)sortRowsTransformationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getRowTransformation()
  {
    return rowTransformationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getTransformation()
  {
    return transformationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPipeline()
  {
    return pipelineEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPipeline_Transformation()
  {
    return (EReference)pipelineEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getExport()
  {
    return exportEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getExport_Table()
  {
    return (EAttribute)exportEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getExport_Path()
  {
    return (EAttribute)exportEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getExport_Output()
  {
    return (EReference)exportEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DslFactory getDslFactory()
  {
    return (DslFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    myDslEClass = createEClass(MY_DSL);
    createEReference(myDslEClass, MY_DSL__ASSIGNMENT);
    createEReference(myDslEClass, MY_DSL__EXPORT);

    assignmentEClass = createEClass(ASSIGNMENT);
    createEAttribute(assignmentEClass, ASSIGNMENT__NAME);
    createEReference(assignmentEClass, ASSIGNMENT__EXPRESSION);

    combinationOperationsEClass = createEClass(COMBINATION_OPERATIONS);
    createEAttribute(combinationOperationsEClass, COMBINATION_OPERATIONS__OPERATION);
    createEAttribute(combinationOperationsEClass, COMBINATION_OPERATIONS__TYPE);
    createEReference(combinationOperationsEClass, COMBINATION_OPERATIONS__TABLE_OPERATION);

    tableOperationsEClass = createEClass(TABLE_OPERATIONS);
    createEReference(tableOperationsEClass, TABLE_OPERATIONS__OPERATION);
    createEReference(tableOperationsEClass, TABLE_OPERATIONS__TRANSFORMATIONS);

    selectSourceEClass = createEClass(SELECT_SOURCE);
    createEAttribute(selectSourceEClass, SELECT_SOURCE__NAME);

    inlineSourceEClass = createEClass(INLINE_SOURCE);
    createEReference(inlineSourceEClass, INLINE_SOURCE__SOURCE_EXPR);

    sourceOperationEClass = createEClass(SOURCE_OPERATION);
    createEReference(sourceOperationEClass, SOURCE_OPERATION__SOURCE);

    transformationTableOperationEClass = createEClass(TRANSFORMATION_TABLE_OPERATION);
    createEReference(transformationTableOperationEClass, TRANSFORMATION_TABLE_OPERATION__TRANSFORMATION);

    selectPipelineEClass = createEClass(SELECT_PIPELINE);
    createEAttribute(selectPipelineEClass, SELECT_PIPELINE__NAME);

    inlinePipelineEClass = createEClass(INLINE_PIPELINE);
    createEReference(inlinePipelineEClass, INLINE_PIPELINE__PIPELINE_EXPR);

    pipelineTableOperationEClass = createEClass(PIPELINE_TABLE_OPERATION);
    createEReference(pipelineTableOperationEClass, PIPELINE_TABLE_OPERATION__PIPELINE);

    transformOperationEClass = createEClass(TRANSFORM_OPERATION);
    createEReference(transformOperationEClass, TRANSFORM_OPERATION__OPERATION);

    tableEClass = createEClass(TABLE);
    createEReference(tableEClass, TABLE__OPERATION);

    xmlTypeEClass = createEClass(XML_TYPE);
    createEAttribute(xmlTypeEClass, XML_TYPE__PATH);

    jsonTypeEClass = createEClass(JSON_TYPE);
    createEAttribute(jsonTypeEClass, JSON_TYPE__PATH);

    yamlTypeEClass = createEClass(YAML_TYPE);

    csvTypeEClass = createEClass(CSV_TYPE);

    autoTypeEClass = createEClass(AUTO_TYPE);

    inputTypeEClass = createEClass(INPUT_TYPE);

    htmlTypeEClass = createEClass(HTML_TYPE);
    createEAttribute(htmlTypeEClass, HTML_TYPE__CSS_PATH);

    outputTypeEClass = createEClass(OUTPUT_TYPE);
    createEReference(outputTypeEClass, OUTPUT_TYPE__TYPE);

    metaDataEClass = createEClass(META_DATA);
    createEAttribute(metaDataEClass, META_DATA__METADATA);

    sourceStoreEClass = createEClass(SOURCE_STORE);
    createEReference(sourceStoreEClass, SOURCE_STORE__METADATA);
    createEAttribute(sourceStoreEClass, SOURCE_STORE__COLUMN);

    sourceCoumnSelectEClass = createEClass(SOURCE_COUMN_SELECT);
    createEAttribute(sourceCoumnSelectEClass, SOURCE_COUMN_SELECT__COLUMN);

    sourceEClass = createEClass(SOURCE);
    createEAttribute(sourceEClass, SOURCE__QUERY);
    createEAttribute(sourceEClass, SOURCE__FILE_PATH);
    createEReference(sourceEClass, SOURCE__INPUT_TYPE);
    createEReference(sourceEClass, SOURCE__STORE);
    createEReference(sourceEClass, SOURCE__SELECT);

    canonicalizePathTransformationEClass = createEClass(CANONICALIZE_PATH_TRANSFORMATION);

    getPathTransformationEClass = createEClass(GET_PATH_TRANSFORMATION);

    appendPathTransformationEClass = createEClass(APPEND_PATH_TRANSFORMATION);
    createEAttribute(appendPathTransformationEClass, APPEND_PATH_TRANSFORMATION__PATH);

    pathTransformationEClass = createEClass(PATH_TRANSFORMATION);
    createEReference(pathTransformationEClass, PATH_TRANSFORMATION__OPERATION);
    createEAttribute(pathTransformationEClass, PATH_TRANSFORMATION__COLUMN);

    foldAverageTranformationEClass = createEClass(FOLD_AVERAGE_TRANFORMATION);

    foldSumTranformationEClass = createEClass(FOLD_SUM_TRANFORMATION);

    groupByEClass = createEClass(GROUP_BY);
    createEAttribute(groupByEClass, GROUP_BY__COLUMN);

    foldTransformationEClass = createEClass(FOLD_TRANSFORMATION);
    createEReference(foldTransformationEClass, FOLD_TRANSFORMATION__OPERATION);
    createEReference(foldTransformationEClass, FOLD_TRANSFORMATION__GROUP_BY);

    addColumnTransformationEClass = createEClass(ADD_COLUMN_TRANSFORMATION);
    createEAttribute(addColumnTransformationEClass, ADD_COLUMN_TRANSFORMATION__COLUMN);
    createEAttribute(addColumnTransformationEClass, ADD_COLUMN_TRANSFORMATION__VALUE);

    removeColumnTransformationEClass = createEClass(REMOVE_COLUMN_TRANSFORMATION);
    createEAttribute(removeColumnTransformationEClass, REMOVE_COLUMN_TRANSFORMATION__COLUMN);

    renameColumnTransformationEClass = createEClass(RENAME_COLUMN_TRANSFORMATION);
    createEAttribute(renameColumnTransformationEClass, RENAME_COLUMN_TRANSFORMATION__REGEX);
    createEAttribute(renameColumnTransformationEClass, RENAME_COLUMN_TRANSFORMATION__FROM);
    createEAttribute(renameColumnTransformationEClass, RENAME_COLUMN_TRANSFORMATION__TO);

    selectColumnTransformationEClass = createEClass(SELECT_COLUMN_TRANSFORMATION);
    createEAttribute(selectColumnTransformationEClass, SELECT_COLUMN_TRANSFORMATION__COLUMN);

    columnTransformationEClass = createEClass(COLUMN_TRANSFORMATION);

    roundCellsTransformationEClass = createEClass(ROUND_CELLS_TRANSFORMATION);
    createEAttribute(roundCellsTransformationEClass, ROUND_CELLS_TRANSFORMATION__COLUMNS);
    createEAttribute(roundCellsTransformationEClass, ROUND_CELLS_TRANSFORMATION__DIGITS);

    setCellsTransformationEClass = createEClass(SET_CELLS_TRANSFORMATION);
    createEAttribute(setCellsTransformationEClass, SET_CELLS_TRANSFORMATION__VALUE);
    createEAttribute(setCellsTransformationEClass, SET_CELLS_TRANSFORMATION__COLUMN);
    createEAttribute(setCellsTransformationEClass, SET_CELLS_TRANSFORMATION__ROW);

    cellTransformationEClass = createEClass(CELL_TRANSFORMATION);

    selectRowsTransformationEClass = createEClass(SELECT_ROWS_TRANSFORMATION);
    createEAttribute(selectRowsTransformationEClass, SELECT_ROWS_TRANSFORMATION__START);
    createEAttribute(selectRowsTransformationEClass, SELECT_ROWS_TRANSFORMATION__LENGTH);
    createEAttribute(selectRowsTransformationEClass, SELECT_ROWS_TRANSFORMATION__GROUP_BY);

    sortRowsTransformationEClass = createEClass(SORT_ROWS_TRANSFORMATION);
    createEAttribute(sortRowsTransformationEClass, SORT_ROWS_TRANSFORMATION__COLUMNS);
    createEAttribute(sortRowsTransformationEClass, SORT_ROWS_TRANSFORMATION__ORDER);

    rowTransformationEClass = createEClass(ROW_TRANSFORMATION);

    transformationEClass = createEClass(TRANSFORMATION);

    pipelineEClass = createEClass(PIPELINE);
    createEReference(pipelineEClass, PIPELINE__TRANSFORMATION);

    exportEClass = createEClass(EXPORT);
    createEAttribute(exportEClass, EXPORT__TABLE);
    createEAttribute(exportEClass, EXPORT__PATH);
    createEReference(exportEClass, EXPORT__OUTPUT);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes
    xmlTypeEClass.getESuperTypes().add(this.getInputType());
    jsonTypeEClass.getESuperTypes().add(this.getInputType());
    yamlTypeEClass.getESuperTypes().add(this.getInputType());
    csvTypeEClass.getESuperTypes().add(this.getInputType());
    autoTypeEClass.getESuperTypes().add(this.getInputType());
    pathTransformationEClass.getESuperTypes().add(this.getTransformation());
    foldTransformationEClass.getESuperTypes().add(this.getTransformation());
    addColumnTransformationEClass.getESuperTypes().add(this.getColumnTransformation());
    removeColumnTransformationEClass.getESuperTypes().add(this.getColumnTransformation());
    renameColumnTransformationEClass.getESuperTypes().add(this.getColumnTransformation());
    selectColumnTransformationEClass.getESuperTypes().add(this.getColumnTransformation());
    columnTransformationEClass.getESuperTypes().add(this.getTransformation());
    roundCellsTransformationEClass.getESuperTypes().add(this.getCellTransformation());
    setCellsTransformationEClass.getESuperTypes().add(this.getCellTransformation());
    cellTransformationEClass.getESuperTypes().add(this.getTransformation());
    selectRowsTransformationEClass.getESuperTypes().add(this.getRowTransformation());
    sortRowsTransformationEClass.getESuperTypes().add(this.getRowTransformation());
    rowTransformationEClass.getESuperTypes().add(this.getTransformation());

    // Initialize classes and features; add operations and parameters
    initEClass(myDslEClass, MyDsl.class, "MyDsl", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getMyDsl_Assignment(), this.getAssignment(), null, "assignment", null, 0, -1, MyDsl.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getMyDsl_Export(), this.getExport(), null, "export", null, 0, -1, MyDsl.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(assignmentEClass, Assignment.class, "Assignment", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getAssignment_Name(), ecorePackage.getEString(), "name", null, 0, 1, Assignment.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getAssignment_Expression(), ecorePackage.getEObject(), null, "expression", null, 0, 1, Assignment.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(combinationOperationsEClass, CombinationOperations.class, "CombinationOperations", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getCombinationOperations_Operation(), ecorePackage.getEString(), "operation", null, 0, 1, CombinationOperations.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getCombinationOperations_Type(), ecorePackage.getEString(), "type", null, 0, 1, CombinationOperations.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getCombinationOperations_TableOperation(), this.getTableOperations(), null, "tableOperation", null, 0, -1, CombinationOperations.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(tableOperationsEClass, TableOperations.class, "TableOperations", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getTableOperations_Operation(), ecorePackage.getEObject(), null, "operation", null, 0, 1, TableOperations.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getTableOperations_Transformations(), this.getTransformOperation(), null, "transformations", null, 0, -1, TableOperations.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(selectSourceEClass, SelectSource.class, "SelectSource", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getSelectSource_Name(), ecorePackage.getEString(), "name", null, 0, 1, SelectSource.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(inlineSourceEClass, InlineSource.class, "InlineSource", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getInlineSource_SourceExpr(), this.getSource(), null, "sourceExpr", null, 0, 1, InlineSource.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(sourceOperationEClass, SourceOperation.class, "SourceOperation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getSourceOperation_Source(), ecorePackage.getEObject(), null, "source", null, 0, 1, SourceOperation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(transformationTableOperationEClass, TransformationTableOperation.class, "TransformationTableOperation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getTransformationTableOperation_Transformation(), this.getTransformation(), null, "transformation", null, 0, 1, TransformationTableOperation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(selectPipelineEClass, SelectPipeline.class, "SelectPipeline", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getSelectPipeline_Name(), ecorePackage.getEString(), "name", null, 0, 1, SelectPipeline.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(inlinePipelineEClass, InlinePipeline.class, "InlinePipeline", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getInlinePipeline_PipelineExpr(), this.getPipeline(), null, "pipelineExpr", null, 0, 1, InlinePipeline.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(pipelineTableOperationEClass, PipelineTableOperation.class, "PipelineTableOperation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getPipelineTableOperation_Pipeline(), ecorePackage.getEObject(), null, "pipeline", null, 0, 1, PipelineTableOperation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(transformOperationEClass, TransformOperation.class, "TransformOperation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getTransformOperation_Operation(), ecorePackage.getEObject(), null, "operation", null, 0, -1, TransformOperation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(tableEClass, Table.class, "Table", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getTable_Operation(), this.getTableOperations(), null, "operation", null, 0, 1, Table.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(xmlTypeEClass, XmlType.class, "XmlType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getXmlType_Path(), ecorePackage.getEString(), "path", null, 0, 1, XmlType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(jsonTypeEClass, JsonType.class, "JsonType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getJsonType_Path(), ecorePackage.getEString(), "path", null, 0, 1, JsonType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(yamlTypeEClass, YamlType.class, "YamlType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(csvTypeEClass, CsvType.class, "CsvType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(autoTypeEClass, AutoType.class, "AutoType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(inputTypeEClass, InputType.class, "InputType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(htmlTypeEClass, HtmlType.class, "HtmlType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getHtmlType_CssPath(), ecorePackage.getEString(), "cssPath", null, 0, 1, HtmlType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(outputTypeEClass, OutputType.class, "OutputType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getOutputType_Type(), ecorePackage.getEObject(), null, "type", null, 0, 1, OutputType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(metaDataEClass, MetaData.class, "MetaData", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getMetaData_Metadata(), ecorePackage.getEString(), "metadata", null, 0, 1, MetaData.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(sourceStoreEClass, SourceStore.class, "SourceStore", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getSourceStore_Metadata(), this.getMetaData(), null, "metadata", null, 0, 1, SourceStore.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getSourceStore_Column(), ecorePackage.getEString(), "column", null, 0, 1, SourceStore.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(sourceCoumnSelectEClass, SourceCoumnSelect.class, "SourceCoumnSelect", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getSourceCoumnSelect_Column(), ecorePackage.getEString(), "column", null, 0, -1, SourceCoumnSelect.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(sourceEClass, Source.class, "Source", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getSource_Query(), ecorePackage.getEString(), "query", null, 0, 1, Source.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getSource_FilePath(), ecorePackage.getEString(), "filePath", null, 0, 1, Source.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSource_InputType(), this.getInputType(), null, "inputType", null, 0, 1, Source.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSource_Store(), this.getSourceStore(), null, "store", null, 0, -1, Source.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSource_Select(), this.getSourceCoumnSelect(), null, "select", null, 0, 1, Source.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(canonicalizePathTransformationEClass, CanonicalizePathTransformation.class, "CanonicalizePathTransformation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(getPathTransformationEClass, GetPathTransformation.class, "GetPathTransformation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(appendPathTransformationEClass, AppendPathTransformation.class, "AppendPathTransformation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getAppendPathTransformation_Path(), ecorePackage.getEString(), "path", null, 0, 1, AppendPathTransformation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(pathTransformationEClass, PathTransformation.class, "PathTransformation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getPathTransformation_Operation(), ecorePackage.getEObject(), null, "operation", null, 0, 1, PathTransformation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getPathTransformation_Column(), ecorePackage.getEString(), "column", null, 0, 1, PathTransformation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(foldAverageTranformationEClass, FoldAverageTranformation.class, "FoldAverageTranformation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(foldSumTranformationEClass, FoldSumTranformation.class, "FoldSumTranformation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(groupByEClass, GroupBy.class, "GroupBy", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getGroupBy_Column(), ecorePackage.getEString(), "column", null, 0, 1, GroupBy.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(foldTransformationEClass, FoldTransformation.class, "FoldTransformation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getFoldTransformation_Operation(), ecorePackage.getEObject(), null, "operation", null, 0, 1, FoldTransformation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFoldTransformation_GroupBy(), this.getGroupBy(), null, "groupBy", null, 0, 1, FoldTransformation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(addColumnTransformationEClass, AddColumnTransformation.class, "AddColumnTransformation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getAddColumnTransformation_Column(), ecorePackage.getEString(), "column", null, 0, 1, AddColumnTransformation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getAddColumnTransformation_Value(), ecorePackage.getEString(), "value", null, 0, 1, AddColumnTransformation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(removeColumnTransformationEClass, RemoveColumnTransformation.class, "RemoveColumnTransformation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getRemoveColumnTransformation_Column(), ecorePackage.getEString(), "column", null, 0, -1, RemoveColumnTransformation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(renameColumnTransformationEClass, RenameColumnTransformation.class, "RenameColumnTransformation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getRenameColumnTransformation_Regex(), ecorePackage.getEString(), "regex", null, 0, 1, RenameColumnTransformation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getRenameColumnTransformation_From(), ecorePackage.getEString(), "from", null, 0, 1, RenameColumnTransformation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getRenameColumnTransformation_To(), ecorePackage.getEString(), "to", null, 0, 1, RenameColumnTransformation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(selectColumnTransformationEClass, SelectColumnTransformation.class, "SelectColumnTransformation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getSelectColumnTransformation_Column(), ecorePackage.getEString(), "column", null, 0, -1, SelectColumnTransformation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(columnTransformationEClass, ColumnTransformation.class, "ColumnTransformation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(roundCellsTransformationEClass, RoundCellsTransformation.class, "RoundCellsTransformation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getRoundCellsTransformation_Columns(), ecorePackage.getEString(), "columns", null, 0, -1, RoundCellsTransformation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getRoundCellsTransformation_Digits(), ecorePackage.getEInt(), "digits", null, 0, 1, RoundCellsTransformation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(setCellsTransformationEClass, SetCellsTransformation.class, "SetCellsTransformation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getSetCellsTransformation_Value(), ecorePackage.getEString(), "value", null, 0, 1, SetCellsTransformation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getSetCellsTransformation_Column(), ecorePackage.getEString(), "column", null, 0, 1, SetCellsTransformation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getSetCellsTransformation_Row(), ecorePackage.getEString(), "row", null, 0, 1, SetCellsTransformation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(cellTransformationEClass, CellTransformation.class, "CellTransformation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(selectRowsTransformationEClass, SelectRowsTransformation.class, "SelectRowsTransformation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getSelectRowsTransformation_Start(), ecorePackage.getEInt(), "start", null, 0, 1, SelectRowsTransformation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getSelectRowsTransformation_Length(), ecorePackage.getEInt(), "length", null, 0, 1, SelectRowsTransformation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getSelectRowsTransformation_GroupBy(), ecorePackage.getEString(), "groupBy", null, 0, 1, SelectRowsTransformation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(sortRowsTransformationEClass, SortRowsTransformation.class, "SortRowsTransformation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getSortRowsTransformation_Columns(), ecorePackage.getEString(), "columns", null, 0, -1, SortRowsTransformation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getSortRowsTransformation_Order(), ecorePackage.getEString(), "order", null, 0, 1, SortRowsTransformation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(rowTransformationEClass, RowTransformation.class, "RowTransformation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(transformationEClass, Transformation.class, "Transformation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(pipelineEClass, Pipeline.class, "Pipeline", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getPipeline_Transformation(), this.getTransformation(), null, "transformation", null, 0, -1, Pipeline.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(exportEClass, Export.class, "Export", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getExport_Table(), ecorePackage.getEString(), "table", null, 0, 1, Export.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getExport_Path(), ecorePackage.getEString(), "path", null, 0, 1, Export.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getExport_Output(), this.getOutputType(), null, "output", null, 0, 1, Export.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    // Create resource
    createResource(eNS_URI);
  }

} //DslPackageImpl
