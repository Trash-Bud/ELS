/**
 * generated by Xtext 2.32.0
 */
package pt.up.fe.els2023.dsl.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import pt.up.fe.els2023.dsl.DslPackage;
import pt.up.fe.els2023.dsl.InlineSource;
import pt.up.fe.els2023.dsl.Source;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Inline Source</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link pt.up.fe.els2023.dsl.impl.InlineSourceImpl#getSourceExpr <em>Source Expr</em>}</li>
 * </ul>
 *
 * @generated
 */
public class InlineSourceImpl extends MinimalEObjectImpl.Container implements InlineSource
{
  /**
   * The cached value of the '{@link #getSourceExpr() <em>Source Expr</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSourceExpr()
   * @generated
   * @ordered
   */
  protected Source sourceExpr;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected InlineSourceImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DslPackage.Literals.INLINE_SOURCE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Source getSourceExpr()
  {
    return sourceExpr;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSourceExpr(Source newSourceExpr, NotificationChain msgs)
  {
    Source oldSourceExpr = sourceExpr;
    sourceExpr = newSourceExpr;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DslPackage.INLINE_SOURCE__SOURCE_EXPR, oldSourceExpr, newSourceExpr);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSourceExpr(Source newSourceExpr)
  {
    if (newSourceExpr != sourceExpr)
    {
      NotificationChain msgs = null;
      if (sourceExpr != null)
        msgs = ((InternalEObject)sourceExpr).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DslPackage.INLINE_SOURCE__SOURCE_EXPR, null, msgs);
      if (newSourceExpr != null)
        msgs = ((InternalEObject)newSourceExpr).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DslPackage.INLINE_SOURCE__SOURCE_EXPR, null, msgs);
      msgs = basicSetSourceExpr(newSourceExpr, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DslPackage.INLINE_SOURCE__SOURCE_EXPR, newSourceExpr, newSourceExpr));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case DslPackage.INLINE_SOURCE__SOURCE_EXPR:
        return basicSetSourceExpr(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DslPackage.INLINE_SOURCE__SOURCE_EXPR:
        return getSourceExpr();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DslPackage.INLINE_SOURCE__SOURCE_EXPR:
        setSourceExpr((Source)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DslPackage.INLINE_SOURCE__SOURCE_EXPR:
        setSourceExpr((Source)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DslPackage.INLINE_SOURCE__SOURCE_EXPR:
        return sourceExpr != null;
    }
    return super.eIsSet(featureID);
  }

} //InlineSourceImpl
