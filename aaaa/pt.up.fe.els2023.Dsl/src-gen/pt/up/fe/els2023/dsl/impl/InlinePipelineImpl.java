/**
 * generated by Xtext 2.32.0
 */
package pt.up.fe.els2023.dsl.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import pt.up.fe.els2023.dsl.DslPackage;
import pt.up.fe.els2023.dsl.InlinePipeline;
import pt.up.fe.els2023.dsl.Pipeline;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Inline Pipeline</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link pt.up.fe.els2023.dsl.impl.InlinePipelineImpl#getPipelineExpr <em>Pipeline Expr</em>}</li>
 * </ul>
 *
 * @generated
 */
public class InlinePipelineImpl extends MinimalEObjectImpl.Container implements InlinePipeline
{
  /**
   * The cached value of the '{@link #getPipelineExpr() <em>Pipeline Expr</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPipelineExpr()
   * @generated
   * @ordered
   */
  protected Pipeline pipelineExpr;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected InlinePipelineImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DslPackage.Literals.INLINE_PIPELINE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Pipeline getPipelineExpr()
  {
    return pipelineExpr;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetPipelineExpr(Pipeline newPipelineExpr, NotificationChain msgs)
  {
    Pipeline oldPipelineExpr = pipelineExpr;
    pipelineExpr = newPipelineExpr;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DslPackage.INLINE_PIPELINE__PIPELINE_EXPR, oldPipelineExpr, newPipelineExpr);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPipelineExpr(Pipeline newPipelineExpr)
  {
    if (newPipelineExpr != pipelineExpr)
    {
      NotificationChain msgs = null;
      if (pipelineExpr != null)
        msgs = ((InternalEObject)pipelineExpr).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DslPackage.INLINE_PIPELINE__PIPELINE_EXPR, null, msgs);
      if (newPipelineExpr != null)
        msgs = ((InternalEObject)newPipelineExpr).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DslPackage.INLINE_PIPELINE__PIPELINE_EXPR, null, msgs);
      msgs = basicSetPipelineExpr(newPipelineExpr, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DslPackage.INLINE_PIPELINE__PIPELINE_EXPR, newPipelineExpr, newPipelineExpr));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case DslPackage.INLINE_PIPELINE__PIPELINE_EXPR:
        return basicSetPipelineExpr(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DslPackage.INLINE_PIPELINE__PIPELINE_EXPR:
        return getPipelineExpr();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DslPackage.INLINE_PIPELINE__PIPELINE_EXPR:
        setPipelineExpr((Pipeline)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DslPackage.INLINE_PIPELINE__PIPELINE_EXPR:
        setPipelineExpr((Pipeline)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DslPackage.INLINE_PIPELINE__PIPELINE_EXPR:
        return pipelineExpr != null;
    }
    return super.eIsSet(featureID);
  }

} //InlinePipelineImpl
