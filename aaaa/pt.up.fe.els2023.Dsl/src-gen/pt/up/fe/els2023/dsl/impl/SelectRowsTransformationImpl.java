/**
 * generated by Xtext 2.32.0
 */
package pt.up.fe.els2023.dsl.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import pt.up.fe.els2023.dsl.DslPackage;
import pt.up.fe.els2023.dsl.SelectRowsTransformation;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Select Rows Transformation</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link pt.up.fe.els2023.dsl.impl.SelectRowsTransformationImpl#getStart <em>Start</em>}</li>
 *   <li>{@link pt.up.fe.els2023.dsl.impl.SelectRowsTransformationImpl#getLength <em>Length</em>}</li>
 *   <li>{@link pt.up.fe.els2023.dsl.impl.SelectRowsTransformationImpl#getGroupBy <em>Group By</em>}</li>
 * </ul>
 *
 * @generated
 */
public class SelectRowsTransformationImpl extends RowTransformationImpl implements SelectRowsTransformation
{
  /**
   * The default value of the '{@link #getStart() <em>Start</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStart()
   * @generated
   * @ordered
   */
  protected static final int START_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getStart() <em>Start</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStart()
   * @generated
   * @ordered
   */
  protected int start = START_EDEFAULT;

  /**
   * The default value of the '{@link #getLength() <em>Length</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLength()
   * @generated
   * @ordered
   */
  protected static final int LENGTH_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getLength() <em>Length</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLength()
   * @generated
   * @ordered
   */
  protected int length = LENGTH_EDEFAULT;

  /**
   * The default value of the '{@link #getGroupBy() <em>Group By</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getGroupBy()
   * @generated
   * @ordered
   */
  protected static final String GROUP_BY_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getGroupBy() <em>Group By</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getGroupBy()
   * @generated
   * @ordered
   */
  protected String groupBy = GROUP_BY_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SelectRowsTransformationImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DslPackage.Literals.SELECT_ROWS_TRANSFORMATION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getStart()
  {
    return start;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setStart(int newStart)
  {
    int oldStart = start;
    start = newStart;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DslPackage.SELECT_ROWS_TRANSFORMATION__START, oldStart, start));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getLength()
  {
    return length;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setLength(int newLength)
  {
    int oldLength = length;
    length = newLength;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DslPackage.SELECT_ROWS_TRANSFORMATION__LENGTH, oldLength, length));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getGroupBy()
  {
    return groupBy;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setGroupBy(String newGroupBy)
  {
    String oldGroupBy = groupBy;
    groupBy = newGroupBy;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DslPackage.SELECT_ROWS_TRANSFORMATION__GROUP_BY, oldGroupBy, groupBy));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DslPackage.SELECT_ROWS_TRANSFORMATION__START:
        return getStart();
      case DslPackage.SELECT_ROWS_TRANSFORMATION__LENGTH:
        return getLength();
      case DslPackage.SELECT_ROWS_TRANSFORMATION__GROUP_BY:
        return getGroupBy();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DslPackage.SELECT_ROWS_TRANSFORMATION__START:
        setStart((Integer)newValue);
        return;
      case DslPackage.SELECT_ROWS_TRANSFORMATION__LENGTH:
        setLength((Integer)newValue);
        return;
      case DslPackage.SELECT_ROWS_TRANSFORMATION__GROUP_BY:
        setGroupBy((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DslPackage.SELECT_ROWS_TRANSFORMATION__START:
        setStart(START_EDEFAULT);
        return;
      case DslPackage.SELECT_ROWS_TRANSFORMATION__LENGTH:
        setLength(LENGTH_EDEFAULT);
        return;
      case DslPackage.SELECT_ROWS_TRANSFORMATION__GROUP_BY:
        setGroupBy(GROUP_BY_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DslPackage.SELECT_ROWS_TRANSFORMATION__START:
        return start != START_EDEFAULT;
      case DslPackage.SELECT_ROWS_TRANSFORMATION__LENGTH:
        return length != LENGTH_EDEFAULT;
      case DslPackage.SELECT_ROWS_TRANSFORMATION__GROUP_BY:
        return GROUP_BY_EDEFAULT == null ? groupBy != null : !GROUP_BY_EDEFAULT.equals(groupBy);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (start: ");
    result.append(start);
    result.append(", length: ");
    result.append(length);
    result.append(", groupBy: ");
    result.append(groupBy);
    result.append(')');
    return result.toString();
  }

} //SelectRowsTransformationImpl
