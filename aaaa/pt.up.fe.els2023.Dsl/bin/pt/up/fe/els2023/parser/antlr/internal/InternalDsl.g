/*
 * generated by Xtext 2.32.0
 */
grammar InternalDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package pt.up.fe.els2023.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package pt.up.fe.els2023.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import pt.up.fe.els2023.services.DslGrammarAccess;

}

@parser::members {

 	private DslGrammarAccess grammarAccess;

    public InternalDslParser(TokenStream input, DslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "MyDsl";
   	}

   	@Override
   	protected DslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleMyDsl
entryRuleMyDsl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMyDslRule()); }
	iv_ruleMyDsl=ruleMyDsl
	{ $current=$iv_ruleMyDsl.current; }
	EOF;

// Rule MyDsl
ruleMyDsl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getMyDslAccess().getAssignmentAssignmentParserRuleCall_0_0());
				}
				lv_assignment_0_0=ruleAssignment
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMyDslRule());
					}
					add(
						$current,
						"assignment",
						lv_assignment_0_0,
						"pt.up.fe.els2023.Dsl.Assignment");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getMyDslAccess().getExportExportParserRuleCall_1_0());
				}
				lv_export_1_0=ruleExport
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMyDslRule());
					}
					add(
						$current,
						"export",
						lv_export_1_0,
						"pt.up.fe.els2023.Dsl.Export");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleAssignment
entryRuleAssignment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAssignmentRule()); }
	iv_ruleAssignment=ruleAssignment
	{ $current=$iv_ruleAssignment.current; }
	EOF;

// Rule Assignment
ruleAssignment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getAssignmentAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAssignmentRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getAssignmentAccess().getEqualsSignKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getAssignmentAccess().getExpressionPipelineParserRuleCall_2_0_0());
					}
					lv_expression_2_1=rulePipeline
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAssignmentRule());
						}
						set(
							$current,
							"expression",
							lv_expression_2_1,
							"pt.up.fe.els2023.Dsl.Pipeline");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getAssignmentAccess().getExpressionSourceParserRuleCall_2_0_1());
					}
					lv_expression_2_2=ruleSource
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAssignmentRule());
						}
						set(
							$current,
							"expression",
							lv_expression_2_2,
							"pt.up.fe.els2023.Dsl.Source");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getAssignmentAccess().getExpressionTableParserRuleCall_2_0_2());
					}
					lv_expression_2_3=ruleTable
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAssignmentRule());
						}
						set(
							$current,
							"expression",
							lv_expression_2_3,
							"pt.up.fe.els2023.Dsl.Table");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleCombinationOperations
entryRuleCombinationOperations returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCombinationOperationsRule()); }
	iv_ruleCombinationOperations=ruleCombinationOperations
	{ $current=$iv_ruleCombinationOperations.current; }
	EOF;

// Rule CombinationOperations
ruleCombinationOperations returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_operation_0_1='merge'
					{
						newLeafNode(lv_operation_0_1, grammarAccess.getCombinationOperationsAccess().getOperationMergeKeyword_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCombinationOperationsRule());
						}
						setWithLastConsumed($current, "operation", lv_operation_0_1, null);
					}
					    |
					lv_operation_0_2='append'
					{
						newLeafNode(lv_operation_0_2, grammarAccess.getCombinationOperationsAccess().getOperationAppendKeyword_0_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCombinationOperationsRule());
						}
						setWithLastConsumed($current, "operation", lv_operation_0_2, null);
					}
				)
			)
		)
		(
			(
				(
					lv_type_1_1='union'
					{
						newLeafNode(lv_type_1_1, grammarAccess.getCombinationOperationsAccess().getTypeUnionKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCombinationOperationsRule());
						}
						setWithLastConsumed($current, "type", lv_type_1_1, null);
					}
					    |
					lv_type_1_2='intersection'
					{
						newLeafNode(lv_type_1_2, grammarAccess.getCombinationOperationsAccess().getTypeIntersectionKeyword_1_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCombinationOperationsRule());
						}
						setWithLastConsumed($current, "type", lv_type_1_2, null);
					}
				)
			)
		)?
		otherlv_2='['
		{
			newLeafNode(otherlv_2, grammarAccess.getCombinationOperationsAccess().getLeftSquareBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCombinationOperationsAccess().getTableOperationTableOperationsParserRuleCall_3_0());
				}
				lv_tableOperation_3_0=ruleTableOperations
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCombinationOperationsRule());
					}
					add(
						$current,
						"tableOperation",
						lv_tableOperation_3_0,
						"pt.up.fe.els2023.Dsl.TableOperations");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getCombinationOperationsAccess().getCommaKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCombinationOperationsAccess().getTableOperationTableOperationsParserRuleCall_4_1_0());
					}
					lv_tableOperation_5_0=ruleTableOperations
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCombinationOperationsRule());
						}
						add(
							$current,
							"tableOperation",
							lv_tableOperation_5_0,
							"pt.up.fe.els2023.Dsl.TableOperations");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			otherlv_6=','
			{
				newLeafNode(otherlv_6, grammarAccess.getCombinationOperationsAccess().getCommaKeyword_5());
			}
		)?
		otherlv_7=']'
		{
			newLeafNode(otherlv_7, grammarAccess.getCombinationOperationsAccess().getRightSquareBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleTableOperations
entryRuleTableOperations returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTableOperationsRule()); }
	iv_ruleTableOperations=ruleTableOperations
	{ $current=$iv_ruleTableOperations.current; }
	EOF;

// Rule TableOperations
ruleTableOperations returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getTableOperationsAccess().getOperationSourceOperationParserRuleCall_0_0_0());
					}
					lv_operation_0_1=ruleSourceOperation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTableOperationsRule());
						}
						set(
							$current,
							"operation",
							lv_operation_0_1,
							"pt.up.fe.els2023.Dsl.SourceOperation");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getTableOperationsAccess().getOperationCombinationOperationsParserRuleCall_0_0_1());
					}
					lv_operation_0_2=ruleCombinationOperations
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTableOperationsRule());
						}
						set(
							$current,
							"operation",
							lv_operation_0_2,
							"pt.up.fe.els2023.Dsl.CombinationOperations");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getTableOperationsAccess().getTransformationsTransformOperationParserRuleCall_1_0());
				}
				lv_transformations_1_0=ruleTransformOperation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTableOperationsRule());
					}
					add(
						$current,
						"transformations",
						lv_transformations_1_0,
						"pt.up.fe.els2023.Dsl.TransformOperation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleSelectSource
entryRuleSelectSource returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSelectSourceRule()); }
	iv_ruleSelectSource=ruleSelectSource
	{ $current=$iv_ruleSelectSource.current; }
	EOF;

// Rule SelectSource
ruleSelectSource returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getSelectSourceAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getSelectSourceRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.eclipse.xtext.common.Terminals.ID");
			}
		)
	)
;

// Entry rule entryRuleInlineSource
entryRuleInlineSource returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInlineSourceRule()); }
	iv_ruleInlineSource=ruleInlineSource
	{ $current=$iv_ruleInlineSource.current; }
	EOF;

// Rule InlineSource
ruleInlineSource returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getInlineSourceAccess().getLeftParenthesisKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInlineSourceAccess().getSourceExprSourceParserRuleCall_1_0());
				}
				lv_sourceExpr_1_0=ruleSource
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInlineSourceRule());
					}
					set(
						$current,
						"sourceExpr",
						lv_sourceExpr_1_0,
						"pt.up.fe.els2023.Dsl.Source");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=')'
		{
			newLeafNode(otherlv_2, grammarAccess.getInlineSourceAccess().getRightParenthesisKeyword_2());
		}
	)
;

// Entry rule entryRuleSourceOperation
entryRuleSourceOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSourceOperationRule()); }
	iv_ruleSourceOperation=ruleSourceOperation
	{ $current=$iv_ruleSourceOperation.current; }
	EOF;

// Rule SourceOperation
ruleSourceOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSourceOperationAccess().getSourceSelectSourceParserRuleCall_0_0());
				}
				lv_source_0_1=ruleSelectSource
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSourceOperationRule());
					}
					set(
						$current,
						"source",
						lv_source_0_1,
						"pt.up.fe.els2023.Dsl.SelectSource");
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getSourceOperationAccess().getSourceInlineSourceParserRuleCall_0_1());
				}
				lv_source_0_2=ruleInlineSource
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSourceOperationRule());
					}
					set(
						$current,
						"source",
						lv_source_0_2,
						"pt.up.fe.els2023.Dsl.InlineSource");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleTransformationTableOperation
entryRuleTransformationTableOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTransformationTableOperationRule()); }
	iv_ruleTransformationTableOperation=ruleTransformationTableOperation
	{ $current=$iv_ruleTransformationTableOperation.current; }
	EOF;

// Rule TransformationTableOperation
ruleTransformationTableOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getTransformationTableOperationAccess().getLeftParenthesisKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTransformationTableOperationAccess().getTransformationTransformationParserRuleCall_1_0());
				}
				lv_transformation_1_0=ruleTransformation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTransformationTableOperationRule());
					}
					set(
						$current,
						"transformation",
						lv_transformation_1_0,
						"pt.up.fe.els2023.Dsl.Transformation");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=')'
		{
			newLeafNode(otherlv_2, grammarAccess.getTransformationTableOperationAccess().getRightParenthesisKeyword_2());
		}
	)
;

// Entry rule entryRuleSelectPipeline
entryRuleSelectPipeline returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSelectPipelineRule()); }
	iv_ruleSelectPipeline=ruleSelectPipeline
	{ $current=$iv_ruleSelectPipeline.current; }
	EOF;

// Rule SelectPipeline
ruleSelectPipeline returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getSelectPipelineAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getSelectPipelineRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.eclipse.xtext.common.Terminals.ID");
			}
		)
	)
;

// Entry rule entryRuleInlinePipeline
entryRuleInlinePipeline returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInlinePipelineRule()); }
	iv_ruleInlinePipeline=ruleInlinePipeline
	{ $current=$iv_ruleInlinePipeline.current; }
	EOF;

// Rule InlinePipeline
ruleInlinePipeline returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getInlinePipelineAccess().getLeftParenthesisKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInlinePipelineAccess().getPipelineExprPipelineParserRuleCall_1_0());
				}
				lv_pipelineExpr_1_0=rulePipeline
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInlinePipelineRule());
					}
					set(
						$current,
						"pipelineExpr",
						lv_pipelineExpr_1_0,
						"pt.up.fe.els2023.Dsl.Pipeline");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=')'
		{
			newLeafNode(otherlv_2, grammarAccess.getInlinePipelineAccess().getRightParenthesisKeyword_2());
		}
	)
;

// Entry rule entryRulePipelineTableOperation
entryRulePipelineTableOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPipelineTableOperationRule()); }
	iv_rulePipelineTableOperation=rulePipelineTableOperation
	{ $current=$iv_rulePipelineTableOperation.current; }
	EOF;

// Rule PipelineTableOperation
rulePipelineTableOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getPipelineTableOperationAccess().getPipelineSelectPipelineParserRuleCall_0_0());
				}
				lv_pipeline_0_1=ruleSelectPipeline
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPipelineTableOperationRule());
					}
					set(
						$current,
						"pipeline",
						lv_pipeline_0_1,
						"pt.up.fe.els2023.Dsl.SelectPipeline");
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getPipelineTableOperationAccess().getPipelineInlinePipelineParserRuleCall_0_1());
				}
				lv_pipeline_0_2=ruleInlinePipeline
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPipelineTableOperationRule());
					}
					set(
						$current,
						"pipeline",
						lv_pipeline_0_2,
						"pt.up.fe.els2023.Dsl.InlinePipeline");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleTransformOperation
entryRuleTransformOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTransformOperationRule()); }
	iv_ruleTransformOperation=ruleTransformOperation
	{ $current=$iv_ruleTransformOperation.current; }
	EOF;

// Rule TransformOperation
ruleTransformOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='apply'
		{
			newLeafNode(otherlv_0, grammarAccess.getTransformOperationAccess().getApplyKeyword_0());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getTransformOperationAccess().getOperationTransformationTableOperationParserRuleCall_1_0_0());
					}
					lv_operation_1_1=ruleTransformationTableOperation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTransformOperationRule());
						}
						add(
							$current,
							"operation",
							lv_operation_1_1,
							"pt.up.fe.els2023.Dsl.TransformationTableOperation");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getTransformOperationAccess().getOperationPipelineTableOperationParserRuleCall_1_0_1());
					}
					lv_operation_1_2=rulePipelineTableOperation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTransformOperationRule());
						}
						add(
							$current,
							"operation",
							lv_operation_1_2,
							"pt.up.fe.els2023.Dsl.PipelineTableOperation");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleTable
entryRuleTable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTableRule()); }
	iv_ruleTable=ruleTable
	{ $current=$iv_ruleTable.current; }
	EOF;

// Rule Table
ruleTable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getTableAccess().getOperationTableOperationsParserRuleCall_0_0());
				}
				lv_operation_0_0=ruleTableOperations
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTableRule());
					}
					set(
						$current,
						"operation",
						lv_operation_0_0,
						"pt.up.fe.els2023.Dsl.TableOperations");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=';'
		{
			newLeafNode(otherlv_1, grammarAccess.getTableAccess().getSemicolonKeyword_1());
		}
	)
;

// Entry rule entryRuleXmlType
entryRuleXmlType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXmlTypeRule()); }
	iv_ruleXmlType=ruleXmlType
	{ $current=$iv_ruleXmlType.current; }
	EOF;

// Rule XmlType
ruleXmlType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getXmlTypeAccess().getXmlTypeAction_0(),
					$current);
			}
		)
		otherlv_1='xml'
		{
			newLeafNode(otherlv_1, grammarAccess.getXmlTypeAccess().getXmlKeyword_1());
		}
		(
			otherlv_2='{'
			{
				newLeafNode(otherlv_2, grammarAccess.getXmlTypeAccess().getLeftCurlyBracketKeyword_2_0());
			}
			otherlv_3='xpath'
			{
				newLeafNode(otherlv_3, grammarAccess.getXmlTypeAccess().getXpathKeyword_2_1());
			}
			otherlv_4='='
			{
				newLeafNode(otherlv_4, grammarAccess.getXmlTypeAccess().getEqualsSignKeyword_2_2());
			}
			(
				(
					lv_path_5_0=RULE_STRING
					{
						newLeafNode(lv_path_5_0, grammarAccess.getXmlTypeAccess().getPathSTRINGTerminalRuleCall_2_3_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getXmlTypeRule());
						}
						setWithLastConsumed(
							$current,
							"path",
							lv_path_5_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
			otherlv_6=','
			{
				newLeafNode(otherlv_6, grammarAccess.getXmlTypeAccess().getCommaKeyword_2_4());
			}
			otherlv_7='}'
			{
				newLeafNode(otherlv_7, grammarAccess.getXmlTypeAccess().getRightCurlyBracketKeyword_2_5());
			}
		)?
	)
;

// Entry rule entryRuleJsonType
entryRuleJsonType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJsonTypeRule()); }
	iv_ruleJsonType=ruleJsonType
	{ $current=$iv_ruleJsonType.current; }
	EOF;

// Rule JsonType
ruleJsonType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getJsonTypeAccess().getJsonTypeAction_0(),
					$current);
			}
		)
		otherlv_1='json'
		{
			newLeafNode(otherlv_1, grammarAccess.getJsonTypeAccess().getJsonKeyword_1());
		}
		(
			otherlv_2='{'
			{
				newLeafNode(otherlv_2, grammarAccess.getJsonTypeAccess().getLeftCurlyBracketKeyword_2_0());
			}
			otherlv_3='jsonpath'
			{
				newLeafNode(otherlv_3, grammarAccess.getJsonTypeAccess().getJsonpathKeyword_2_1());
			}
			otherlv_4='='
			{
				newLeafNode(otherlv_4, grammarAccess.getJsonTypeAccess().getEqualsSignKeyword_2_2());
			}
			(
				(
					lv_path_5_0=RULE_STRING
					{
						newLeafNode(lv_path_5_0, grammarAccess.getJsonTypeAccess().getPathSTRINGTerminalRuleCall_2_3_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getJsonTypeRule());
						}
						setWithLastConsumed(
							$current,
							"path",
							lv_path_5_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
			otherlv_6=','
			{
				newLeafNode(otherlv_6, grammarAccess.getJsonTypeAccess().getCommaKeyword_2_4());
			}
			otherlv_7='}'
			{
				newLeafNode(otherlv_7, grammarAccess.getJsonTypeAccess().getRightCurlyBracketKeyword_2_5());
			}
		)?
	)
;

// Entry rule entryRuleYamlType
entryRuleYamlType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getYamlTypeRule()); }
	iv_ruleYamlType=ruleYamlType
	{ $current=$iv_ruleYamlType.current; }
	EOF;

// Rule YamlType
ruleYamlType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getYamlTypeAccess().getYamlTypeAction_0(),
					$current);
			}
		)
		otherlv_1='yaml'
		{
			newLeafNode(otherlv_1, grammarAccess.getYamlTypeAccess().getYamlKeyword_1());
		}
	)
;

// Entry rule entryRuleCsvType
entryRuleCsvType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCsvTypeRule()); }
	iv_ruleCsvType=ruleCsvType
	{ $current=$iv_ruleCsvType.current; }
	EOF;

// Rule CsvType
ruleCsvType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getCsvTypeAccess().getCsvTypeAction_0(),
					$current);
			}
		)
		otherlv_1='csv'
		{
			newLeafNode(otherlv_1, grammarAccess.getCsvTypeAccess().getCsvKeyword_1());
		}
	)
;

// Entry rule entryRuleAutoType
entryRuleAutoType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAutoTypeRule()); }
	iv_ruleAutoType=ruleAutoType
	{ $current=$iv_ruleAutoType.current; }
	EOF;

// Rule AutoType
ruleAutoType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getAutoTypeAccess().getAutoTypeAction_0(),
					$current);
			}
		)
		otherlv_1='auto'
		{
			newLeafNode(otherlv_1, grammarAccess.getAutoTypeAccess().getAutoKeyword_1());
		}
	)
;

// Entry rule entryRuleInputType
entryRuleInputType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInputTypeRule()); }
	iv_ruleInputType=ruleInputType
	{ $current=$iv_ruleInputType.current; }
	EOF;

// Rule InputType
ruleInputType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getInputTypeAccess().getJsonTypeParserRuleCall_0());
		}
		this_JsonType_0=ruleJsonType
		{
			$current = $this_JsonType_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getInputTypeAccess().getXmlTypeParserRuleCall_1());
		}
		this_XmlType_1=ruleXmlType
		{
			$current = $this_XmlType_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getInputTypeAccess().getCsvTypeParserRuleCall_2());
		}
		this_CsvType_2=ruleCsvType
		{
			$current = $this_CsvType_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getInputTypeAccess().getYamlTypeParserRuleCall_3());
		}
		this_YamlType_3=ruleYamlType
		{
			$current = $this_YamlType_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getInputTypeAccess().getAutoTypeParserRuleCall_4());
		}
		this_AutoType_4=ruleAutoType
		{
			$current = $this_AutoType_4.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleHtmlType
entryRuleHtmlType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getHtmlTypeRule()); }
	iv_ruleHtmlType=ruleHtmlType
	{ $current=$iv_ruleHtmlType.current; }
	EOF;

// Rule HtmlType
ruleHtmlType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getHtmlTypeAccess().getHtmlTypeAction_0(),
					$current);
			}
		)
		otherlv_1='html'
		{
			newLeafNode(otherlv_1, grammarAccess.getHtmlTypeAccess().getHtmlKeyword_1());
		}
		(
			otherlv_2='{'
			{
				newLeafNode(otherlv_2, grammarAccess.getHtmlTypeAccess().getLeftCurlyBracketKeyword_2_0());
			}
			otherlv_3='css'
			{
				newLeafNode(otherlv_3, grammarAccess.getHtmlTypeAccess().getCssKeyword_2_1());
			}
			otherlv_4='='
			{
				newLeafNode(otherlv_4, grammarAccess.getHtmlTypeAccess().getEqualsSignKeyword_2_2());
			}
			(
				(
					lv_cssPath_5_0=RULE_STRING
					{
						newLeafNode(lv_cssPath_5_0, grammarAccess.getHtmlTypeAccess().getCssPathSTRINGTerminalRuleCall_2_3_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getHtmlTypeRule());
						}
						setWithLastConsumed(
							$current,
							"cssPath",
							lv_cssPath_5_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getHtmlTypeAccess().getCommaKeyword_2_4());
				}
			)?
			otherlv_7='}'
			{
				newLeafNode(otherlv_7, grammarAccess.getHtmlTypeAccess().getRightCurlyBracketKeyword_2_5());
			}
		)?
	)
;

// Entry rule entryRuleOutputType
entryRuleOutputType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOutputTypeRule()); }
	iv_ruleOutputType=ruleOutputType
	{ $current=$iv_ruleOutputType.current; }
	EOF;

// Rule OutputType
ruleOutputType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getOutputTypeAccess().getTypeHtmlTypeParserRuleCall_0_0());
				}
				lv_type_0_1=ruleHtmlType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOutputTypeRule());
					}
					set(
						$current,
						"type",
						lv_type_0_1,
						"pt.up.fe.els2023.Dsl.HtmlType");
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getOutputTypeAccess().getTypeAutoTypeParserRuleCall_0_1());
				}
				lv_type_0_2=ruleAutoType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOutputTypeRule());
					}
					set(
						$current,
						"type",
						lv_type_0_2,
						"pt.up.fe.els2023.Dsl.AutoType");
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getOutputTypeAccess().getTypeCsvTypeParserRuleCall_0_2());
				}
				lv_type_0_3=ruleCsvType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOutputTypeRule());
					}
					set(
						$current,
						"type",
						lv_type_0_3,
						"pt.up.fe.els2023.Dsl.CsvType");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleMetaData
entryRuleMetaData returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMetaDataRule()); }
	iv_ruleMetaData=ruleMetaData
	{ $current=$iv_ruleMetaData.current; }
	EOF;

// Rule MetaData
ruleMetaData returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_metadata_0_1='filepath'
				{
					newLeafNode(lv_metadata_0_1, grammarAccess.getMetaDataAccess().getMetadataFilepathKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMetaDataRule());
					}
					setWithLastConsumed($current, "metadata", lv_metadata_0_1, null);
				}
				    |
				lv_metadata_0_2='lastmodified'
				{
					newLeafNode(lv_metadata_0_2, grammarAccess.getMetaDataAccess().getMetadataLastmodifiedKeyword_0_1());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMetaDataRule());
					}
					setWithLastConsumed($current, "metadata", lv_metadata_0_2, null);
				}
			)
		)
	)
;

// Entry rule entryRuleSourceStore
entryRuleSourceStore returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSourceStoreRule()); }
	iv_ruleSourceStore=ruleSourceStore
	{ $current=$iv_ruleSourceStore.current; }
	EOF;

// Rule SourceStore
ruleSourceStore returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='store'
		{
			newLeafNode(otherlv_0, grammarAccess.getSourceStoreAccess().getStoreKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSourceStoreAccess().getMetadataMetaDataParserRuleCall_1_0());
				}
				lv_metadata_1_0=ruleMetaData
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSourceStoreRule());
					}
					set(
						$current,
						"metadata",
						lv_metadata_1_0,
						"pt.up.fe.els2023.Dsl.MetaData");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='in'
		{
			newLeafNode(otherlv_2, grammarAccess.getSourceStoreAccess().getInKeyword_2());
		}
		(
			(
				lv_column_3_0=RULE_STRING
				{
					newLeafNode(lv_column_3_0, grammarAccess.getSourceStoreAccess().getColumnSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSourceStoreRule());
					}
					setWithLastConsumed(
						$current,
						"column",
						lv_column_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleSourceCoumnSelect
entryRuleSourceCoumnSelect returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSourceCoumnSelectRule()); }
	iv_ruleSourceCoumnSelect=ruleSourceCoumnSelect
	{ $current=$iv_ruleSourceCoumnSelect.current; }
	EOF;

// Rule SourceCoumnSelect
ruleSourceCoumnSelect returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='select'
		{
			newLeafNode(otherlv_0, grammarAccess.getSourceCoumnSelectAccess().getSelectKeyword_0());
		}
		otherlv_1='['
		{
			newLeafNode(otherlv_1, grammarAccess.getSourceCoumnSelectAccess().getLeftSquareBracketKeyword_1());
		}
		(
			(
				lv_column_2_0=RULE_STRING
				{
					newLeafNode(lv_column_2_0, grammarAccess.getSourceCoumnSelectAccess().getColumnSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSourceCoumnSelectRule());
					}
					addWithLastConsumed(
						$current,
						"column",
						lv_column_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getSourceCoumnSelectAccess().getCommaKeyword_3_0());
			}
			(
				(
					lv_column_4_0=RULE_STRING
					{
						newLeafNode(lv_column_4_0, grammarAccess.getSourceCoumnSelectAccess().getColumnSTRINGTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSourceCoumnSelectRule());
						}
						addWithLastConsumed(
							$current,
							"column",
							lv_column_4_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)*
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getSourceCoumnSelectAccess().getCommaKeyword_4());
			}
		)?
		otherlv_6=']'
		{
			newLeafNode(otherlv_6, grammarAccess.getSourceCoumnSelectAccess().getRightSquareBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleSource
entryRuleSource returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSourceRule()); }
	iv_ruleSource=ruleSource
	{ $current=$iv_ruleSource.current; }
	EOF;

// Rule Source
ruleSource returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='import'
		{
			newLeafNode(otherlv_0, grammarAccess.getSourceAccess().getImportKeyword_0());
		}
		(
			(
				lv_query_1_0=RULE_STRING
				{
					newLeafNode(lv_query_1_0, grammarAccess.getSourceAccess().getQuerySTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSourceRule());
					}
					setWithLastConsumed(
						$current,
						"query",
						lv_query_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)?
		otherlv_2='from'
		{
			newLeafNode(otherlv_2, grammarAccess.getSourceAccess().getFromKeyword_2());
		}
		(
			(
				lv_filePath_3_0=RULE_STRING
				{
					newLeafNode(lv_filePath_3_0, grammarAccess.getSourceAccess().getFilePathSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSourceRule());
					}
					setWithLastConsumed(
						$current,
						"filePath",
						lv_filePath_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			otherlv_4='as'
			{
				newLeafNode(otherlv_4, grammarAccess.getSourceAccess().getAsKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSourceAccess().getInputTypeInputTypeParserRuleCall_4_1_0());
					}
					lv_inputType_5_0=ruleInputType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSourceRule());
						}
						set(
							$current,
							"inputType",
							lv_inputType_5_0,
							"pt.up.fe.els2023.Dsl.InputType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getSourceAccess().getStoreSourceStoreParserRuleCall_5_0());
				}
				lv_store_6_0=ruleSourceStore
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSourceRule());
					}
					add(
						$current,
						"store",
						lv_store_6_0,
						"pt.up.fe.els2023.Dsl.SourceStore");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getSourceAccess().getSelectSourceCoumnSelectParserRuleCall_6_0());
				}
				lv_select_7_0=ruleSourceCoumnSelect
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSourceRule());
					}
					set(
						$current,
						"select",
						lv_select_7_0,
						"pt.up.fe.els2023.Dsl.SourceCoumnSelect");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_8=';'
		{
			newLeafNode(otherlv_8, grammarAccess.getSourceAccess().getSemicolonKeyword_7());
		}
	)
;

// Entry rule entryRuleCanonicalizePathTransformation
entryRuleCanonicalizePathTransformation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCanonicalizePathTransformationRule()); }
	iv_ruleCanonicalizePathTransformation=ruleCanonicalizePathTransformation
	{ $current=$iv_ruleCanonicalizePathTransformation.current; }
	EOF;

// Rule CanonicalizePathTransformation
ruleCanonicalizePathTransformation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getCanonicalizePathTransformationAccess().getCanonicalizePathTransformationAction_0(),
					$current);
			}
		)
		otherlv_1='canonicalize'
		{
			newLeafNode(otherlv_1, grammarAccess.getCanonicalizePathTransformationAccess().getCanonicalizeKeyword_1());
		}
		otherlv_2='path'
		{
			newLeafNode(otherlv_2, grammarAccess.getCanonicalizePathTransformationAccess().getPathKeyword_2());
		}
	)
;

// Entry rule entryRuleGetPathTransformation
entryRuleGetPathTransformation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGetPathTransformationRule()); }
	iv_ruleGetPathTransformation=ruleGetPathTransformation
	{ $current=$iv_ruleGetPathTransformation.current; }
	EOF;

// Rule GetPathTransformation
ruleGetPathTransformation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getGetPathTransformationAccess().getGetPathTransformationAction_0(),
					$current);
			}
		)
		otherlv_1='name'
		{
			newLeafNode(otherlv_1, grammarAccess.getGetPathTransformationAccess().getNameKeyword_1());
		}
		otherlv_2='of'
		{
			newLeafNode(otherlv_2, grammarAccess.getGetPathTransformationAccess().getOfKeyword_2());
		}
		otherlv_3='path'
		{
			newLeafNode(otherlv_3, grammarAccess.getGetPathTransformationAccess().getPathKeyword_3());
		}
	)
;

// Entry rule entryRuleAppendPathTransformation
entryRuleAppendPathTransformation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAppendPathTransformationRule()); }
	iv_ruleAppendPathTransformation=ruleAppendPathTransformation
	{ $current=$iv_ruleAppendPathTransformation.current; }
	EOF;

// Rule AppendPathTransformation
ruleAppendPathTransformation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='append'
		{
			newLeafNode(otherlv_0, grammarAccess.getAppendPathTransformationAccess().getAppendKeyword_0());
		}
		otherlv_1='path'
		{
			newLeafNode(otherlv_1, grammarAccess.getAppendPathTransformationAccess().getPathKeyword_1());
		}
		(
			(
				lv_path_2_0=RULE_STRING
				{
					newLeafNode(lv_path_2_0, grammarAccess.getAppendPathTransformationAccess().getPathSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAppendPathTransformationRule());
					}
					setWithLastConsumed(
						$current,
						"path",
						lv_path_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRulePathTransformation
entryRulePathTransformation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPathTransformationRule()); }
	iv_rulePathTransformation=rulePathTransformation
	{ $current=$iv_rulePathTransformation.current; }
	EOF;

// Rule PathTransformation
rulePathTransformation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getPathTransformationAccess().getOperationAppendPathTransformationParserRuleCall_0_0_0());
					}
					lv_operation_0_1=ruleAppendPathTransformation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPathTransformationRule());
						}
						set(
							$current,
							"operation",
							lv_operation_0_1,
							"pt.up.fe.els2023.Dsl.AppendPathTransformation");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getPathTransformationAccess().getOperationCanonicalizePathTransformationParserRuleCall_0_0_1());
					}
					lv_operation_0_2=ruleCanonicalizePathTransformation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPathTransformationRule());
						}
						set(
							$current,
							"operation",
							lv_operation_0_2,
							"pt.up.fe.els2023.Dsl.CanonicalizePathTransformation");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getPathTransformationAccess().getOperationGetPathTransformationParserRuleCall_0_0_2());
					}
					lv_operation_0_3=ruleGetPathTransformation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPathTransformationRule());
						}
						set(
							$current,
							"operation",
							lv_operation_0_3,
							"pt.up.fe.els2023.Dsl.GetPathTransformation");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		otherlv_1='in'
		{
			newLeafNode(otherlv_1, grammarAccess.getPathTransformationAccess().getInKeyword_1());
		}
		(
			(
				lv_column_2_0=RULE_STRING
				{
					newLeafNode(lv_column_2_0, grammarAccess.getPathTransformationAccess().getColumnSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPathTransformationRule());
					}
					setWithLastConsumed(
						$current,
						"column",
						lv_column_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleFoldAverageTranformation
entryRuleFoldAverageTranformation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFoldAverageTranformationRule()); }
	iv_ruleFoldAverageTranformation=ruleFoldAverageTranformation
	{ $current=$iv_ruleFoldAverageTranformation.current; }
	EOF;

// Rule FoldAverageTranformation
ruleFoldAverageTranformation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getFoldAverageTranformationAccess().getFoldAverageTranformationAction_0(),
					$current);
			}
		)
		otherlv_1='fold'
		{
			newLeafNode(otherlv_1, grammarAccess.getFoldAverageTranformationAccess().getFoldKeyword_1());
		}
		otherlv_2='average'
		{
			newLeafNode(otherlv_2, grammarAccess.getFoldAverageTranformationAccess().getAverageKeyword_2());
		}
	)
;

// Entry rule entryRuleFoldSumTranformation
entryRuleFoldSumTranformation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFoldSumTranformationRule()); }
	iv_ruleFoldSumTranformation=ruleFoldSumTranformation
	{ $current=$iv_ruleFoldSumTranformation.current; }
	EOF;

// Rule FoldSumTranformation
ruleFoldSumTranformation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getFoldSumTranformationAccess().getFoldSumTranformationAction_0(),
					$current);
			}
		)
		otherlv_1='fold'
		{
			newLeafNode(otherlv_1, grammarAccess.getFoldSumTranformationAccess().getFoldKeyword_1());
		}
		otherlv_2='sum'
		{
			newLeafNode(otherlv_2, grammarAccess.getFoldSumTranformationAccess().getSumKeyword_2());
		}
	)
;

// Entry rule entryRuleGroupBy
entryRuleGroupBy returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGroupByRule()); }
	iv_ruleGroupBy=ruleGroupBy
	{ $current=$iv_ruleGroupBy.current; }
	EOF;

// Rule GroupBy
ruleGroupBy returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='group'
		{
			newLeafNode(otherlv_0, grammarAccess.getGroupByAccess().getGroupKeyword_0());
		}
		otherlv_1='by'
		{
			newLeafNode(otherlv_1, grammarAccess.getGroupByAccess().getByKeyword_1());
		}
		(
			(
				lv_column_2_0=RULE_STRING
				{
					newLeafNode(lv_column_2_0, grammarAccess.getGroupByAccess().getColumnSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGroupByRule());
					}
					setWithLastConsumed(
						$current,
						"column",
						lv_column_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleFoldTransformation
entryRuleFoldTransformation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFoldTransformationRule()); }
	iv_ruleFoldTransformation=ruleFoldTransformation
	{ $current=$iv_ruleFoldTransformation.current; }
	EOF;

// Rule FoldTransformation
ruleFoldTransformation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getFoldTransformationAccess().getOperationFoldSumTranformationParserRuleCall_0_0_0());
					}
					lv_operation_0_1=ruleFoldSumTranformation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFoldTransformationRule());
						}
						set(
							$current,
							"operation",
							lv_operation_0_1,
							"pt.up.fe.els2023.Dsl.FoldSumTranformation");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getFoldTransformationAccess().getOperationFoldAverageTranformationParserRuleCall_0_0_1());
					}
					lv_operation_0_2=ruleFoldAverageTranformation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFoldTransformationRule());
						}
						set(
							$current,
							"operation",
							lv_operation_0_2,
							"pt.up.fe.els2023.Dsl.FoldAverageTranformation");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFoldTransformationAccess().getGroupByGroupByParserRuleCall_1_0());
				}
				lv_groupBy_1_0=ruleGroupBy
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFoldTransformationRule());
					}
					set(
						$current,
						"groupBy",
						lv_groupBy_1_0,
						"pt.up.fe.els2023.Dsl.GroupBy");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleAddColumnTransformation
entryRuleAddColumnTransformation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAddColumnTransformationRule()); }
	iv_ruleAddColumnTransformation=ruleAddColumnTransformation
	{ $current=$iv_ruleAddColumnTransformation.current; }
	EOF;

// Rule AddColumnTransformation
ruleAddColumnTransformation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='add'
		{
			newLeafNode(otherlv_0, grammarAccess.getAddColumnTransformationAccess().getAddKeyword_0());
		}
		(
			(
				lv_column_1_0=RULE_STRING
				{
					newLeafNode(lv_column_1_0, grammarAccess.getAddColumnTransformationAccess().getColumnSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAddColumnTransformationRule());
					}
					setWithLastConsumed(
						$current,
						"column",
						lv_column_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_2='with'
		{
			newLeafNode(otherlv_2, grammarAccess.getAddColumnTransformationAccess().getWithKeyword_2());
		}
		(
			(
				lv_value_3_0=RULE_STRING
				{
					newLeafNode(lv_value_3_0, grammarAccess.getAddColumnTransformationAccess().getValueSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAddColumnTransformationRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleRemoveColumnTransformation
entryRuleRemoveColumnTransformation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRemoveColumnTransformationRule()); }
	iv_ruleRemoveColumnTransformation=ruleRemoveColumnTransformation
	{ $current=$iv_ruleRemoveColumnTransformation.current; }
	EOF;

// Rule RemoveColumnTransformation
ruleRemoveColumnTransformation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='remove'
		{
			newLeafNode(otherlv_0, grammarAccess.getRemoveColumnTransformationAccess().getRemoveKeyword_0());
		}
		otherlv_1='['
		{
			newLeafNode(otherlv_1, grammarAccess.getRemoveColumnTransformationAccess().getLeftSquareBracketKeyword_1());
		}
		(
			(
				lv_column_2_0=RULE_STRING
				{
					newLeafNode(lv_column_2_0, grammarAccess.getRemoveColumnTransformationAccess().getColumnSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRemoveColumnTransformationRule());
					}
					addWithLastConsumed(
						$current,
						"column",
						lv_column_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getRemoveColumnTransformationAccess().getCommaKeyword_3_0());
			}
			(
				(
					lv_column_4_0=RULE_STRING
					{
						newLeafNode(lv_column_4_0, grammarAccess.getRemoveColumnTransformationAccess().getColumnSTRINGTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRemoveColumnTransformationRule());
						}
						addWithLastConsumed(
							$current,
							"column",
							lv_column_4_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)*
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getRemoveColumnTransformationAccess().getCommaKeyword_4());
			}
		)?
		otherlv_6=']'
		{
			newLeafNode(otherlv_6, grammarAccess.getRemoveColumnTransformationAccess().getRightSquareBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleRenameColumnTransformation
entryRuleRenameColumnTransformation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRenameColumnTransformationRule()); }
	iv_ruleRenameColumnTransformation=ruleRenameColumnTransformation
	{ $current=$iv_ruleRenameColumnTransformation.current; }
	EOF;

// Rule RenameColumnTransformation
ruleRenameColumnTransformation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='rename'
		{
			newLeafNode(otherlv_0, grammarAccess.getRenameColumnTransformationAccess().getRenameKeyword_0());
		}
		(
			(
				lv_regex_1_0='regex'
				{
					newLeafNode(lv_regex_1_0, grammarAccess.getRenameColumnTransformationAccess().getRegexRegexKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRenameColumnTransformationRule());
					}
					setWithLastConsumed($current, "regex", lv_regex_1_0, "regex");
				}
			)
		)?
		(
			(
				lv_from_2_0=RULE_STRING
				{
					newLeafNode(lv_from_2_0, grammarAccess.getRenameColumnTransformationAccess().getFromSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRenameColumnTransformationRule());
					}
					setWithLastConsumed(
						$current,
						"from",
						lv_from_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_3='to'
		{
			newLeafNode(otherlv_3, grammarAccess.getRenameColumnTransformationAccess().getToKeyword_3());
		}
		(
			(
				lv_to_4_0=RULE_STRING
				{
					newLeafNode(lv_to_4_0, grammarAccess.getRenameColumnTransformationAccess().getToSTRINGTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRenameColumnTransformationRule());
					}
					setWithLastConsumed(
						$current,
						"to",
						lv_to_4_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleSelectColumnTransformation
entryRuleSelectColumnTransformation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSelectColumnTransformationRule()); }
	iv_ruleSelectColumnTransformation=ruleSelectColumnTransformation
	{ $current=$iv_ruleSelectColumnTransformation.current; }
	EOF;

// Rule SelectColumnTransformation
ruleSelectColumnTransformation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='select'
		{
			newLeafNode(otherlv_0, grammarAccess.getSelectColumnTransformationAccess().getSelectKeyword_0());
		}
		otherlv_1='['
		{
			newLeafNode(otherlv_1, grammarAccess.getSelectColumnTransformationAccess().getLeftSquareBracketKeyword_1());
		}
		(
			(
				lv_column_2_0=RULE_STRING
				{
					newLeafNode(lv_column_2_0, grammarAccess.getSelectColumnTransformationAccess().getColumnSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSelectColumnTransformationRule());
					}
					addWithLastConsumed(
						$current,
						"column",
						lv_column_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getSelectColumnTransformationAccess().getCommaKeyword_3_0());
			}
			(
				(
					lv_column_4_0=RULE_STRING
					{
						newLeafNode(lv_column_4_0, grammarAccess.getSelectColumnTransformationAccess().getColumnSTRINGTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSelectColumnTransformationRule());
						}
						addWithLastConsumed(
							$current,
							"column",
							lv_column_4_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)*
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getSelectColumnTransformationAccess().getCommaKeyword_4());
			}
		)?
		otherlv_6=']'
		{
			newLeafNode(otherlv_6, grammarAccess.getSelectColumnTransformationAccess().getRightSquareBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleColumnTransformation
entryRuleColumnTransformation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getColumnTransformationRule()); }
	iv_ruleColumnTransformation=ruleColumnTransformation
	{ $current=$iv_ruleColumnTransformation.current; }
	EOF;

// Rule ColumnTransformation
ruleColumnTransformation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getColumnTransformationAccess().getAddColumnTransformationParserRuleCall_0());
		}
		this_AddColumnTransformation_0=ruleAddColumnTransformation
		{
			$current = $this_AddColumnTransformation_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getColumnTransformationAccess().getRemoveColumnTransformationParserRuleCall_1());
		}
		this_RemoveColumnTransformation_1=ruleRemoveColumnTransformation
		{
			$current = $this_RemoveColumnTransformation_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getColumnTransformationAccess().getRenameColumnTransformationParserRuleCall_2());
		}
		this_RenameColumnTransformation_2=ruleRenameColumnTransformation
		{
			$current = $this_RenameColumnTransformation_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getColumnTransformationAccess().getSelectColumnTransformationParserRuleCall_3());
		}
		this_SelectColumnTransformation_3=ruleSelectColumnTransformation
		{
			$current = $this_SelectColumnTransformation_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleRoundCellsTransformation
entryRuleRoundCellsTransformation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRoundCellsTransformationRule()); }
	iv_ruleRoundCellsTransformation=ruleRoundCellsTransformation
	{ $current=$iv_ruleRoundCellsTransformation.current; }
	EOF;

// Rule RoundCellsTransformation
ruleRoundCellsTransformation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='round'
		{
			newLeafNode(otherlv_0, grammarAccess.getRoundCellsTransformationAccess().getRoundKeyword_0());
		}
		otherlv_1='['
		{
			newLeafNode(otherlv_1, grammarAccess.getRoundCellsTransformationAccess().getLeftSquareBracketKeyword_1());
		}
		(
			(
				lv_columns_2_0=RULE_STRING
				{
					newLeafNode(lv_columns_2_0, grammarAccess.getRoundCellsTransformationAccess().getColumnsSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRoundCellsTransformationRule());
					}
					addWithLastConsumed(
						$current,
						"columns",
						lv_columns_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getRoundCellsTransformationAccess().getCommaKeyword_3_0());
			}
			(
				(
					lv_columns_4_0=RULE_STRING
					{
						newLeafNode(lv_columns_4_0, grammarAccess.getRoundCellsTransformationAccess().getColumnsSTRINGTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRoundCellsTransformationRule());
						}
						addWithLastConsumed(
							$current,
							"columns",
							lv_columns_4_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)*
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getRoundCellsTransformationAccess().getCommaKeyword_4());
			}
		)?
		otherlv_6=']'
		{
			newLeafNode(otherlv_6, grammarAccess.getRoundCellsTransformationAccess().getRightSquareBracketKeyword_5());
		}
		otherlv_7='digits'
		{
			newLeafNode(otherlv_7, grammarAccess.getRoundCellsTransformationAccess().getDigitsKeyword_6());
		}
		(
			(
				lv_digits_8_0=RULE_INT
				{
					newLeafNode(lv_digits_8_0, grammarAccess.getRoundCellsTransformationAccess().getDigitsINTTerminalRuleCall_7_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRoundCellsTransformationRule());
					}
					setWithLastConsumed(
						$current,
						"digits",
						lv_digits_8_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
	)
;

// Entry rule entryRuleSetCellsTransformation
entryRuleSetCellsTransformation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSetCellsTransformationRule()); }
	iv_ruleSetCellsTransformation=ruleSetCellsTransformation
	{ $current=$iv_ruleSetCellsTransformation.current; }
	EOF;

// Rule SetCellsTransformation
ruleSetCellsTransformation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='set'
		{
			newLeafNode(otherlv_0, grammarAccess.getSetCellsTransformationAccess().getSetKeyword_0());
		}
		otherlv_1='value'
		{
			newLeafNode(otherlv_1, grammarAccess.getSetCellsTransformationAccess().getValueKeyword_1());
		}
		(
			(
				lv_value_2_0=RULE_STRING
				{
					newLeafNode(lv_value_2_0, grammarAccess.getSetCellsTransformationAccess().getValueSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSetCellsTransformationRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_3='at'
		{
			newLeafNode(otherlv_3, grammarAccess.getSetCellsTransformationAccess().getAtKeyword_3());
		}
		otherlv_4='column'
		{
			newLeafNode(otherlv_4, grammarAccess.getSetCellsTransformationAccess().getColumnKeyword_4());
		}
		(
			(
				lv_column_5_0=RULE_STRING
				{
					newLeafNode(lv_column_5_0, grammarAccess.getSetCellsTransformationAccess().getColumnSTRINGTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSetCellsTransformationRule());
					}
					setWithLastConsumed(
						$current,
						"column",
						lv_column_5_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			otherlv_6='at'
			{
				newLeafNode(otherlv_6, grammarAccess.getSetCellsTransformationAccess().getAtKeyword_6_0());
			}
			otherlv_7='row'
			{
				newLeafNode(otherlv_7, grammarAccess.getSetCellsTransformationAccess().getRowKeyword_6_1());
			}
			(
				(
					lv_row_8_0=RULE_STRING
					{
						newLeafNode(lv_row_8_0, grammarAccess.getSetCellsTransformationAccess().getRowSTRINGTerminalRuleCall_6_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSetCellsTransformationRule());
						}
						setWithLastConsumed(
							$current,
							"row",
							lv_row_8_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleCellTransformation
entryRuleCellTransformation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCellTransformationRule()); }
	iv_ruleCellTransformation=ruleCellTransformation
	{ $current=$iv_ruleCellTransformation.current; }
	EOF;

// Rule CellTransformation
ruleCellTransformation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getCellTransformationAccess().getRoundCellsTransformationParserRuleCall_0());
		}
		this_RoundCellsTransformation_0=ruleRoundCellsTransformation
		{
			$current = $this_RoundCellsTransformation_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCellTransformationAccess().getSetCellsTransformationParserRuleCall_1());
		}
		this_SetCellsTransformation_1=ruleSetCellsTransformation
		{
			$current = $this_SetCellsTransformation_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSelectRowsTransformation
entryRuleSelectRowsTransformation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSelectRowsTransformationRule()); }
	iv_ruleSelectRowsTransformation=ruleSelectRowsTransformation
	{ $current=$iv_ruleSelectRowsTransformation.current; }
	EOF;

// Rule SelectRowsTransformation
ruleSelectRowsTransformation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='select'
		{
			newLeafNode(otherlv_0, grammarAccess.getSelectRowsTransformationAccess().getSelectKeyword_0());
		}
		(
			(
				lv_start_1_0=RULE_INT
				{
					newLeafNode(lv_start_1_0, grammarAccess.getSelectRowsTransformationAccess().getStartINTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSelectRowsTransformationRule());
					}
					setWithLastConsumed(
						$current,
						"start",
						lv_start_1_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		(
			otherlv_2='skip'
			{
				newLeafNode(otherlv_2, grammarAccess.getSelectRowsTransformationAccess().getSkipKeyword_2_0());
			}
			(
				(
					lv_length_3_0=RULE_INT
					{
						newLeafNode(lv_length_3_0, grammarAccess.getSelectRowsTransformationAccess().getLengthINTTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSelectRowsTransformationRule());
						}
						setWithLastConsumed(
							$current,
							"length",
							lv_length_3_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)?
		(
			otherlv_4='groupby'
			{
				newLeafNode(otherlv_4, grammarAccess.getSelectRowsTransformationAccess().getGroupbyKeyword_3_0());
			}
			(
				(
					lv_groupBy_5_0=RULE_STRING
					{
						newLeafNode(lv_groupBy_5_0, grammarAccess.getSelectRowsTransformationAccess().getGroupBySTRINGTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSelectRowsTransformationRule());
						}
						setWithLastConsumed(
							$current,
							"groupBy",
							lv_groupBy_5_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleSortRowsTransformation
entryRuleSortRowsTransformation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSortRowsTransformationRule()); }
	iv_ruleSortRowsTransformation=ruleSortRowsTransformation
	{ $current=$iv_ruleSortRowsTransformation.current; }
	EOF;

// Rule SortRowsTransformation
ruleSortRowsTransformation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='sort'
		{
			newLeafNode(otherlv_0, grammarAccess.getSortRowsTransformationAccess().getSortKeyword_0());
		}
		otherlv_1='by'
		{
			newLeafNode(otherlv_1, grammarAccess.getSortRowsTransformationAccess().getByKeyword_1());
		}
		otherlv_2='['
		{
			newLeafNode(otherlv_2, grammarAccess.getSortRowsTransformationAccess().getLeftSquareBracketKeyword_2());
		}
		(
			(
				lv_columns_3_0=RULE_STRING
				{
					newLeafNode(lv_columns_3_0, grammarAccess.getSortRowsTransformationAccess().getColumnsSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSortRowsTransformationRule());
					}
					addWithLastConsumed(
						$current,
						"columns",
						lv_columns_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getSortRowsTransformationAccess().getCommaKeyword_4_0());
			}
			(
				(
					lv_columns_5_0=RULE_STRING
					{
						newLeafNode(lv_columns_5_0, grammarAccess.getSortRowsTransformationAccess().getColumnsSTRINGTerminalRuleCall_4_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSortRowsTransformationRule());
						}
						addWithLastConsumed(
							$current,
							"columns",
							lv_columns_5_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)*
		(
			otherlv_6=','
			{
				newLeafNode(otherlv_6, grammarAccess.getSortRowsTransformationAccess().getCommaKeyword_5());
			}
		)?
		otherlv_7=']'
		{
			newLeafNode(otherlv_7, grammarAccess.getSortRowsTransformationAccess().getRightSquareBracketKeyword_6());
		}
		(
			(
				(
					lv_order_8_1='descending'
					{
						newLeafNode(lv_order_8_1, grammarAccess.getSortRowsTransformationAccess().getOrderDescendingKeyword_7_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSortRowsTransformationRule());
						}
						setWithLastConsumed($current, "order", lv_order_8_1, null);
					}
					    |
					lv_order_8_2='ascending'
					{
						newLeafNode(lv_order_8_2, grammarAccess.getSortRowsTransformationAccess().getOrderAscendingKeyword_7_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSortRowsTransformationRule());
						}
						setWithLastConsumed($current, "order", lv_order_8_2, null);
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleRowTransformation
entryRuleRowTransformation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRowTransformationRule()); }
	iv_ruleRowTransformation=ruleRowTransformation
	{ $current=$iv_ruleRowTransformation.current; }
	EOF;

// Rule RowTransformation
ruleRowTransformation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getRowTransformationAccess().getSortRowsTransformationParserRuleCall_0());
		}
		this_SortRowsTransformation_0=ruleSortRowsTransformation
		{
			$current = $this_SortRowsTransformation_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getRowTransformationAccess().getSelectRowsTransformationParserRuleCall_1());
		}
		this_SelectRowsTransformation_1=ruleSelectRowsTransformation
		{
			$current = $this_SelectRowsTransformation_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleTransformation
entryRuleTransformation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTransformationRule()); }
	iv_ruleTransformation=ruleTransformation
	{ $current=$iv_ruleTransformation.current; }
	EOF;

// Rule Transformation
ruleTransformation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTransformationAccess().getPathTransformationParserRuleCall_0());
		}
		this_PathTransformation_0=rulePathTransformation
		{
			$current = $this_PathTransformation_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTransformationAccess().getFoldTransformationParserRuleCall_1());
		}
		this_FoldTransformation_1=ruleFoldTransformation
		{
			$current = $this_FoldTransformation_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTransformationAccess().getColumnTransformationParserRuleCall_2());
		}
		this_ColumnTransformation_2=ruleColumnTransformation
		{
			$current = $this_ColumnTransformation_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTransformationAccess().getCellTransformationParserRuleCall_3());
		}
		this_CellTransformation_3=ruleCellTransformation
		{
			$current = $this_CellTransformation_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTransformationAccess().getRowTransformationParserRuleCall_4());
		}
		this_RowTransformation_4=ruleRowTransformation
		{
			$current = $this_RowTransformation_4.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulePipeline
entryRulePipeline returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPipelineRule()); }
	iv_rulePipeline=rulePipeline
	{ $current=$iv_rulePipeline.current; }
	EOF;

// Rule Pipeline
rulePipeline returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='pipe'
		{
			newLeafNode(otherlv_0, grammarAccess.getPipelineAccess().getPipeKeyword_0());
		}
		otherlv_1='['
		{
			newLeafNode(otherlv_1, grammarAccess.getPipelineAccess().getLeftSquareBracketKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getPipelineAccess().getTransformationTransformationParserRuleCall_2_0_0());
					}
					lv_transformation_2_0=ruleTransformation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPipelineRule());
						}
						add(
							$current,
							"transformation",
							lv_transformation_2_0,
							"pt.up.fe.els2023.Dsl.Transformation");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getPipelineAccess().getCommaKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getPipelineAccess().getTransformationTransformationParserRuleCall_2_1_1_0());
						}
						lv_transformation_4_0=ruleTransformation
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPipelineRule());
							}
							add(
								$current,
								"transformation",
								lv_transformation_4_0,
								"pt.up.fe.els2023.Dsl.Transformation");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			(
				otherlv_5=','
				{
					newLeafNode(otherlv_5, grammarAccess.getPipelineAccess().getCommaKeyword_2_2());
				}
			)?
		)
		otherlv_6=']'
		{
			newLeafNode(otherlv_6, grammarAccess.getPipelineAccess().getRightSquareBracketKeyword_3());
		}
		otherlv_7=';'
		{
			newLeafNode(otherlv_7, grammarAccess.getPipelineAccess().getSemicolonKeyword_4());
		}
	)
;

// Entry rule entryRuleExport
entryRuleExport returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExportRule()); }
	iv_ruleExport=ruleExport
	{ $current=$iv_ruleExport.current; }
	EOF;

// Rule Export
ruleExport returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='export'
		{
			newLeafNode(otherlv_0, grammarAccess.getExportAccess().getExportKeyword_0());
		}
		(
			(
				lv_table_1_0=RULE_ID
				{
					newLeafNode(lv_table_1_0, grammarAccess.getExportAccess().getTableIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExportRule());
					}
					setWithLastConsumed(
						$current,
						"table",
						lv_table_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='to'
		{
			newLeafNode(otherlv_2, grammarAccess.getExportAccess().getToKeyword_2());
		}
		(
			(
				lv_path_3_0=RULE_STRING
				{
					newLeafNode(lv_path_3_0, grammarAccess.getExportAccess().getPathSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExportRule());
					}
					setWithLastConsumed(
						$current,
						"path",
						lv_path_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_4='as'
		{
			newLeafNode(otherlv_4, grammarAccess.getExportAccess().getAsKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getExportAccess().getOutputOutputTypeParserRuleCall_5_0());
				}
				lv_output_5_0=ruleOutputType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExportRule());
					}
					set(
						$current,
						"output",
						lv_output_5_0,
						"pt.up.fe.els2023.Dsl.OutputType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6=';'
		{
			newLeafNode(otherlv_6, grammarAccess.getExportAccess().getSemicolonKeyword_6());
		}
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
